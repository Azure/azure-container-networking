// Code generated by MockGen. DO NOT EDIT.
// Source: /mnt/d/Projects/azure-container-networking/platform/windows/adapter/mellanox/mellanox.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMellanox is a mock of Mellanox interface.
type MockMellanox struct {
	ctrl     *gomock.Controller
	recorder *MockMellanoxMockRecorder
}

// MockMellanoxMockRecorder is the mock recorder for MockMellanox.
type MockMellanoxMockRecorder struct {
	mock *MockMellanox
}

// NewMockMellanox creates a new mock instance.
func NewMockMellanox(ctrl *gomock.Controller) *MockMellanox {
	mock := &MockMellanox{ctrl: ctrl}
	mock.recorder = &MockMellanoxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMellanox) EXPECT() *MockMellanoxMockRecorder {
	return m.recorder
}

// GetAdapaterName mocks base method.
func (m *MockMellanox) GetAdapaterName() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAdapaterName")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAdapaterName indicates an expected call of GetAdapaterName.
func (mr *MockMellanoxMockRecorder) GetAdapaterName() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAdapaterName", reflect.TypeOf((*MockMellanox)(nil).GetAdapaterName))
}

// GetPriorityVLANTag mocks base method.
func (m *MockMellanox) GetPriorityVLANTag() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetPriorityVLANTag")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetPriorityVLANTag indicates an expected call of GetPriorityVLANTag.
func (mr *MockMellanoxMockRecorder) GetPriorityVLANTag() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetPriorityVLANTag", reflect.TypeOf((*MockMellanox)(nil).GetPriorityVLANTag))
}

// SetPriorityVLANTag mocks base method.
func (m *MockMellanox) SetPriorityVLANTag(arg0 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetPriorityVLANTag", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetPriorityVLANTag indicates an expected call of SetPriorityVLANTag.
func (mr *MockMellanoxMockRecorder) SetPriorityVLANTag(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetPriorityVLANTag", reflect.TypeOf((*MockMellanox)(nil).SetPriorityVLANTag), arg0)
}
