// Code generated by bpf2go; DO NOT EDIT.
//go:build mips || mips64 || ppc64 || s390x

package egress

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadEgress returns the embedded CollectionSpec for Egress.
func LoadEgress() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_EgressBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load Egress: %w", err)
	}

	return spec, err
}

// LoadEgressObjects loads Egress and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*EgressObjects
//	*EgressPrograms
//	*EgressMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadEgressObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadEgress()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// EgressSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type EgressSpecs struct {
	EgressProgramSpecs
	EgressMapSpecs
}

// EgressSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type EgressProgramSpecs struct {
	GuaToLinklocal *ebpf.ProgramSpec `ebpf:"gua_to_linklocal"`
}

// EgressMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type EgressMapSpecs struct {
}

// EgressObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadEgressObjects or ebpf.CollectionSpec.LoadAndAssign.
type EgressObjects struct {
	EgressPrograms
	EgressMaps
}

func (o *EgressObjects) Close() error {
	return _EgressClose(
		&o.EgressPrograms,
		&o.EgressMaps,
	)
}

// EgressMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadEgressObjects or ebpf.CollectionSpec.LoadAndAssign.
type EgressMaps struct {
}

func (m *EgressMaps) Close() error {
	return _EgressClose()
}

// EgressPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadEgressObjects or ebpf.CollectionSpec.LoadAndAssign.
type EgressPrograms struct {
	GuaToLinklocal *ebpf.Program `ebpf:"gua_to_linklocal"`
}

func (p *EgressPrograms) Close() error {
	return _EgressClose(
		p.GuaToLinklocal,
	)
}

func _EgressClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//
//go:embed egress_bpfeb.o
var _EgressBytes []byte
