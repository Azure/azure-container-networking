// Code generated by bpf2go; DO NOT EDIT.
//go:build mips || mips64 || ppc64 || s390x

package ingress

import (
	"bytes"
	_ "embed"
	"fmt"
	"io"

	"github.com/cilium/ebpf"
)

// LoadIngress returns the embedded CollectionSpec for Ingress.
func LoadIngress() (*ebpf.CollectionSpec, error) {
	reader := bytes.NewReader(_IngressBytes)
	spec, err := ebpf.LoadCollectionSpecFromReader(reader)
	if err != nil {
		return nil, fmt.Errorf("can't load Ingress: %w", err)
	}

	return spec, err
}

// LoadIngressObjects loads Ingress and converts it into a struct.
//
// The following types are suitable as obj argument:
//
//	*IngressObjects
//	*IngressPrograms
//	*IngressMaps
//
// See ebpf.CollectionSpec.LoadAndAssign documentation for details.
func LoadIngressObjects(obj interface{}, opts *ebpf.CollectionOptions) error {
	spec, err := LoadIngress()
	if err != nil {
		return err
	}

	return spec.LoadAndAssign(obj, opts)
}

// IngressSpecs contains maps and programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type IngressSpecs struct {
	IngressProgramSpecs
	IngressMapSpecs
}

// IngressSpecs contains programs before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type IngressProgramSpecs struct {
	LinklocalToGua *ebpf.ProgramSpec `ebpf:"linklocal_to_gua"`
}

// IngressMapSpecs contains maps before they are loaded into the kernel.
//
// It can be passed ebpf.CollectionSpec.Assign.
type IngressMapSpecs struct {
}

// IngressObjects contains all objects after they have been loaded into the kernel.
//
// It can be passed to LoadIngressObjects or ebpf.CollectionSpec.LoadAndAssign.
type IngressObjects struct {
	IngressPrograms
	IngressMaps
}

func (o *IngressObjects) Close() error {
	return _IngressClose(
		&o.IngressPrograms,
		&o.IngressMaps,
	)
}

// IngressMaps contains all maps after they have been loaded into the kernel.
//
// It can be passed to LoadIngressObjects or ebpf.CollectionSpec.LoadAndAssign.
type IngressMaps struct {
}

func (m *IngressMaps) Close() error {
	return _IngressClose()
}

// IngressPrograms contains all programs after they have been loaded into the kernel.
//
// It can be passed to LoadIngressObjects or ebpf.CollectionSpec.LoadAndAssign.
type IngressPrograms struct {
	LinklocalToGua *ebpf.Program `ebpf:"linklocal_to_gua"`
}

func (p *IngressPrograms) Close() error {
	return _IngressClose(
		p.LinklocalToGua,
	)
}

func _IngressClose(closers ...io.Closer) error {
	for _, closer := range closers {
		if err := closer.Close(); err != nil {
			return err
		}
	}
	return nil
}

// Do not access this directly.
//
//go:embed ingress_bpfeb.o
var _IngressBytes []byte
