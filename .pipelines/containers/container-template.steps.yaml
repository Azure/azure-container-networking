parameters:
- name: imageName
  type: string
- name: name
  type: string
  values:
  - azure-ipam
  - cni
  - cns
  - ipv6-hp-bpf
  - npm

- name: platformVersionTag
  type: string
  default: ""

- name: targetPlatform
  type: string
  default: ""

- name: buildOs
  type: string
  values:
  - linux
  - windows

- name: buildArch
  type: string
  values:
  - amd64
  - arm64

- name: addBuildArgs
  type: object
  default: ""


steps:
#    path: $(Build.SourcesDirectory)
#    buildArguments: --platform "${{ parameters.targetPlatform }}" --build-arg ARCH="${{ parameters.buildArch }}" --build-arg OS="${{ parameters.buildOs }}" --build-arg VERSION="$(IMAGE_PLATFORM_TAG_${{ parameters.name }})" --target "${{ parameters.os }}" $(EXTRA_BUILD_ARGS_${{ parameters.name }})
#    enableNetwork: true
#    enablePull: false
#    enableCache: true
#    useBuildKit: true

    - task: 1ES.BuildContainerImage@1
      retryCountOnTaskFailure: 3
      inputs:
        image: ${{ parameters.imageNameAndTag }}
        dockerfile: ${{ parameters.dockerfilePath }}
        path: ${{ parameters.targetPath }} $(Build.SourcesDirectory)
        buildArguments: |
          --build-arg PLATFORM="${{ parameters.buildPlatform }}" \
          --build-arg ARCH="${{ parameters.buildArch }}" \
          --build-arg OS="${{ parameters.buildOs }}" \
          --build-arg VERSION="${{ parameters.platformVersionTag }}" \
          --platform "${{ parameters.targetPlatform }}" \
          --target "${{ parameters.targetOs }}" \
          ${{ parameters.addBuildArgs }}
        enableNetwork: true
        enablePull: false
        enableCache: true
        useBuildKit: true
    
    - task: 1ES.PushContainerImage@1
      condition: ${{ eq(parameters.os, 'windows') }}
      inputs:
        image: ${{ parameters.imageNameAndTag }}
