parameters:
  arch: ""
  name: ""
  os: ""

steps:
- bash: |
    set -e

    IMAGE_NAME_AND_TAG=$(make "$MAKE_IMG_NAME_AND_TAG")
    echo >&2 "##vso[task.setvariable variable=IMAGE_NAME_AND_TAG_${VAR_ID};]$IMAGE_NAME_AND_TAG"

    DOCKERFILE_PATH=$(make "$MAKE_DOCKERFILE_PATH")
    echo >&2 "##vso[task.setvariable variable=DOCKERFILE_PATH_${VAR_ID};]$DOCKERFILE_PATH"

    EXTRA_BUILD_ARGS=$(make "$MAKE_EXTRA_BUILD_ARGS")
    echo >&2 "##vso[task.setvariable variable=EXTRA_BUILD_ARGS_${VAR_ID};]$EXTRA_BUILD_ARGS"
  displayName: "Get Image Name"
  env:
    VAR_ID: ${{ parameters.name }}
    MAKE_IMG_NAME_AND_TAG: ${{ parameters.name }}-image-name-and-tag
    MAKE_DOCKERFILE_PATH: ${{ parameters.name }}-image-dockerfile-path
    MAKE_EXTRA_BUILD_ARGS: ${{ parameters.name }}-image-build-args

- task: 1ES.BuildContainerImage@1
  retryCountOnTaskFailure: 3
  inputs:
    image: $(IMAGE_NAME_AND_TAG_${{ parameters.name }})
    dockerfile: $(DOCKERFILE_PATH_${{ parameters.name }})
    buildArguments: TARGET=${{ parameters.os }} OS=${{ parameters.os }} PLATFORM=${{ parameters.os }} ARCH=${{ parameters.arch }} $(EXTRA_BUILD_ARGS_${{ parameters.name }})
    enableNetwork: true                         # Optional. Default: false
    enablePull: false                           # Optional. Default: true
    enableCache: true                           # Optional. Default: false
    useBuildKit: true

- task: 1ES.PushContainerImage@1
  condition: ${{ eq(parameters.os, 'windows') }}
  inputs:
    image: $(IMAGE_NAME_AND_TAG_${{ parameters.name }})
