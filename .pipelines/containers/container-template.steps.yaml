parameters:
- name: imageNameAndTag
  type: string

- name: dockerfilePath
  type: string

- name: targetVersion
  type: string
  default: ""

- name: buildContextPath
  type: string
  default: ""

- name: targetPlatform
  type: string
  default: ""

- name: targetOs
  type: string
  values:
  - linux
  - windows

- name: targetArch
  type: string
  values:
  - amd64
  - arm64

- name: buildOs
  type: string
  values:
  - linux
  - windows

- name: buildArch
  type: string
  values:
  - amd64
  - arm64

- name: buildPlatform
  type: string
  default: ""

- name: addBuildArgs
  type: object
  default: ""


steps:
    - task: 1ES.BuildContainerImage@1
      retryCountOnTaskFailure: 3
      inputs:
        image: ${{ parameters.imageNameAndTag }}
        dockerfile: ${{ parameters.dockerfilePath }}
        path: ${{ parameters.buildContextPath }}
        buildArguments: |
          --build-arg PLATFORM="${{ parameters.buildPlatform }}"
          --build-arg ARCH="${{ parameters.buildArch }}"
          --build-arg OS="${{ parameters.buildOs }}"
          --build-arg VERSION="${{ parameters.targetVersion }}"
          --platform "${{ parameters.targetPlatform }}"
          --target "${{ parameters.targetOs }}"
          ${{ parameters.addBuildArgs }}
        enableNetwork: true
        enablePull: false
        enableCache: true
        useBuildKit: true
    
    - task: 1ES.PushContainerImage@1
      condition: ${{ eq(parameters.targetOs, 'windows') }}
      inputs:
        image: ${{ parameters.imageNameAndTag }}
