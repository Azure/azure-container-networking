parameters:
  name: ""
  os: ""
  arch: ""
  tag: ""

steps:
- task: Docker@2
  displayName: Login
  inputs:
    containerRegistry: $(ACR_SERVICE_CONNECTION)
    command: 'login'
    addPipelineData: false

- script: |
    set -e
    sudo podman run --rm --privileged multiarch/qemu-user-static --reset -p yes
  name: container_env
  displayName: Prepare Environment

- script: |
    set -e
    export PLATFORM=${{ parameters.os }}/${{ parameters.arch }}
    export PLATFORM_TAG=$(make container-platform-tag TAG=${{ parameters.tag }} PLATFORM=$PLATFORM)
    make ${{ parameters.name }}-image OS=${{ parameters.os }} ARCH=${{ parameters.arch }} PLATFORM=$PLATFORM TAG=$PLATFORM_TAG
  name: image_build
  displayName: Image Build
  retryCountOnTaskFailure: 3

- script: |
    set -e
    export IMAGE=$(make ${{ parameters.name }}-image-name)
    export PLATFORM=${{ parameters.os }}/${{ parameters.arch }}
    export PLATFORM_TAG=$(make container-platform-tag TAG=${{ parameters.tag }} )
    export REF=$(IMAGE_REGISTRY)/$IMAGE:$PLATFORM_TAG
    skopeo copy containers-storage:$REF docker-daemon:$REF
    wget https://github.com/aquasecurity/trivy/releases/download/v0.18.1/trivy_0.18.1_Linux-64bit.tar.gz
    tar -zxvf trivy*.tar.gz
    mkdir -p ./trivy-cache
    sudo ./trivy --exit-code 1 --cache-dir ./trivy-cache --severity HIGH,CRITICAL $REF
  name: trivy
  displayName: Vulnerability Scan

- script: |
    set -e
    export IMAGE=$(make ${{ parameters.name }}-image-name)
    export PLATFORM=${{ parameters.os }}/${{ parameters.arch }}
    export PLATFORM_TAG=$(make container-platform-tag TAG=${{ parameters.tag }} PLATFORM=$PLATFORM)
    make container-push IMAGE=$IMAGE PLATFORM=$PLATFORM TAG=$PLATFORM_TAG
  retryCountOnTaskFailure: 3
  name: image_push
  displayName: Push Images

- task: Docker@2
  displayName: Logout
  inputs:
    containerRegistry: $(ACR_SERVICE_CONNECTION)
    command: 'logout'
    addPipelineData: false
