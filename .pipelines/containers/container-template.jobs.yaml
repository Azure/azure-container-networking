parameters:
- name: arch
  type: string

- name: os
  type: string

- name: images
  type: object

- name: containerRegistry
  type: object


jobs:
- ${{ each image in parameters.images }}:
  - job: ${{ replace(image, '-', '_') }}_${{ parameters.os }}_${{ parameters.arch }}
    displayName: Build Image - (${{ image }} ${{ parameters.os }}/${{ parameters.arch }})
    templateContext:
      authenticatedContainerRegistries:
      - serviceConnection: $(ACR_SERVICECONNECTION)

    steps:
    - checkout: self

    - task: GoTool@0
      inputs:
        version: $(GO_VERSION)

    - bash: |
        set -e

        BUILD_CONTEXT=$(make "$MAKE_BUILD_CONTEXT")
        echo >&2 "##vso[task.setvariable variable=BUILD_CONTEXT_${VAR_ID};]$BUILD_CONTEXT"

        IMAGE_PLATFORM_TAG=$(make "$MAKE_IMAGE_TAG")
        echo >&2 "##vso[task.setvariable variable=IMAGE_PLATFORM_TAG_${VAR_ID};]$IMAGE_PLATFORM_TAG"

        IMAGE_NAME_AND_TAG=$(make "$MAKE_IMAGE_NAME_AND_TAG")
        echo >&2 "##vso[task.setvariable variable=IMAGE_NAME_AND_TAG_${VAR_ID};]$IMAGE_NAME_AND_TAG"

        DOCKERFILE_PATH=$(make "$MAKE_DOCKERFILE_PATH")
        echo >&2 "##vso[task.setvariable variable=DOCKERFILE_PATH_${VAR_ID};]$DOCKERFILE_PATH"

        EXTRA_BUILD_ARGS=$(make "$MAKE_EXTRA_BUILD_ARGS")
        echo >&2 "##vso[task.setvariable variable=EXTRA_BUILD_ARGS_${VAR_ID};]$EXTRA_BUILD_ARGS"
      displayName: "Get Image Build Data"
      env:
        VAR_ID: ${{ image }}
        MAKE_IMAGE_TAG: ${{ image }}-image-tag
        MAKE_BUILD_CONTEXT: ${{ image }}-image-build-context
        MAKE_IMAGE_NAME_AND_TAG: ${{ image }}-image-name-and-tag
        MAKE_DOCKERFILE_PATH: ${{ image }}-dockerfile-path
        MAKE_EXTRA_BUILD_ARGS: ${{ image }}-docker-build-args

    - template: container-template.steps.yaml
      parameters:
        name: ${{ image }}
        os: ${{ parameters.os }}
        arch: ${{ parameters.arch }}
        platform: ${{ parameters.os }}/${{ parameters.arch }}
