parameters:
  name: ""
  platforms: ""

steps:
  - task: Docker@2
    displayName: Login
    inputs:
      containerRegistry: $(ACR_SERVICE_CONNECTION)
      command: "login"
      addPipelineData: false

  - script: |
      set -e
      export VERSION=$(make ${{ parameters.name }}-version)
      make ${{ parameters.name }}-multiarch-manifest-create PLATFORMS="${{ parameters.platforms }}" TAG=$VERSION
      make ${{ parameters.name }}-image-info TAG=$VERSION
    name: manifest_build
    displayName: Manifest Build

  - script: |
      set -e
      export VERSION=$(make ${{ parameters.name }}-version)
      export IMAGE=$(make ${{ parameters.name }}-image-name)
      make multiarch-manifest-push IMAGE=$IMAGE TAG=$VERSION
      make container-pull IMAGE=$IMAGE TAG=$VERSION
      mkdir -p $(Build.ArtifactStagingDirectory)/images
      skopeo copy --all docker://$IMAGE_REGISTRY/$IMAGE:$VERSION oci-archive:$(Build.ArtifactStagingDirectory)/images/$IMAGE-$VERSION.tar
    name: manifest_push
    displayName: Manifest Push

  - task: Docker@2
    displayName: Logout
    inputs:
      containerRegistry: $(ACR_SERVICE_CONNECTION)
      command: "logout"
      addPipelineData: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: "output"
      targetFolder: $(Build.ArtifactStagingDirectory)
    condition: succeeded()

  - task: ManifestGeneratorTask@0
    displayName: "Add SBOM Generator tool"
    inputs:
      BuildDropPath: "$(Build.ArtifactStagingDirectory)"

  - task: PublishBuildArtifacts@1
    inputs:
      artifactName: "output"
      pathtoPublish: "$(Build.ArtifactStagingDirectory)"
    condition: succeeded()
