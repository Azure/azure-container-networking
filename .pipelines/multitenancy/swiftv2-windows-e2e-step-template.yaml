parameters:
  name: ""
  clusterName: ""
  continueOnError: true

steps:
  - bash: |
      go version
      go env
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    name: "GoEnv"
    displayName: "Set up the Go environment"

  - task: KubectlInstaller@0
    inputs:
      kubectlVersion: latest

  - task: AzureCLI@2
    inputs:
      azureSubscription: $(ACN_TEST_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        set -e
        make -C ./hack/aks set-kubeconf AZCLI=az CLUSTER=${{ parameters.clusterName }}
        ls -lah
        pwd
        kubectl cluster-info
        kubectl get po -owide -A
        echo "Apply first pn file"
        less test/integration/manifests/swiftv2/pn.yaml
        echo "Setting PN name"
        export PN_NAME="PN1"
        echo "Setting network ID"
        export NETWORK_ID=$(kubectl xxx)
        echo $NETWORK_ID
        envsubst '${PN_NAME},${NETWORK_ID}' < test/integration/manifests/swiftv2/pn.yaml | kubectl apply -f -
        sleep 10s
        kubectl get pn
        kubectl describe pn
        echo "Apply first pni file"
        less test/integration/manifests/swiftv2/pni-windows.yaml
        echo "Setting first pni name"
        export $PNI_NAME="pni1"
        envsubst '${PNI_NAME}' < test/integration/manifests/swiftv2/pni-windows.yaml | kubectl apply -f -
        sleep 10s
        kubectl get pni
        kubectl describe pni
        echo "Creating first LCOW Pod"
        less test/integration/manifests/swiftv2/mtwindowspod.yaml
        export SWIFTV2_POD_NAME="swiftv2pod1"
        export NODE_NAME_1="$(kubectl get nodes -o json | jq -r .items[0].metadata.name)"
        echo $NODE_NAME_1
        envsubst '${SWIFTV2_POD_NAME},${NODE_NAME_1}' < test/integration/manifests/swiftv2/mtwindowspod.yaml | kubectl apply -f -
        echo "waiting for pod to be ready"
        sleep 2m
        kubectl get po -owide -A
        echo "Creating second LCOW Pod"
        less test/integration/manifests/swiftv2/mtwindowspod.yaml
        export SWIFTV2_POD_NAME="swiftv2pod2"
        export NODE_NAME_1="$(kubectl get nodes -o json | jq -r .items[0].metadata.name)"
        echo $NODE_NAME_1
        envsubst '${SWIFTV2_POD_NAME},${NODE_NAME_1}' < test/integration/manifests/swiftv2/mtwindowspod.yaml | kubectl apply -f -
        echo "waiting for pod to be ready"
        sleep 2m
        kubectl get po -owide -A
    name: "start_swiftv2_windows_pods"
    displayName: "Start Swiftv2 Windows Pods"
    continueOnError: ${{ parameters.continueOnError }}
    env:
      SUBNET_TOKEN: $(SUBNET_TOKEN)

