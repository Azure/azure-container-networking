parameters:
  name: ""
  displayName: ""
  clusterType: ""
  clusterName: ""
  vmSize: ""
  k8sVersion: ""
  dependsOn: ""
  nodePoolName: ""
  dummyClusterName: ""
  dummyClusterType: ""
  dummyClusterDisplayName: ""

stages:
  - stage: ${{ parameters.clusterName }}
    displayName: Create Cluster - ${{ parameters.displayName }}
    dependsOn:
      - ${{ parameters.dependsOn }}
      - setup
    pool:
      name: $(BUILD_POOL_NAME_DEFAULT)
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
    jobs:
      - template: ../templates/create-cluster.yaml
        parameters:
          name: ${{ parameters.name }}
          displayName: ${{ parameters.displayName }}
          clusterType: ${{ parameters.clusterType }}
          clusterName: ${{ parameters.clusterName }}-$(commitID)
          vmSize: ${{ parameters.vmSize }}
          k8sVersion: ${{ parameters.k8sVersion }}
          dependsOn: ${{ parameters.dependsOn }}
          region: $(REGION_DUALSTACKOVERLAY_CLUSTER_TEST) # Swiftv2 has a specific region requirement and its the same with dualstack reagion

  - stage: ${{ parameters.dummyClusterName }}
    displayName: Create Cluster - ${{ parameters.dummyClusterDisplayName }}
    dependsOn:
      - ${{ parameters.dependsOn }}
      - setup
    pool:
      name: $(BUILD_POOL_NAME_DEFAULT)
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
    jobs:
      - template: ../templates/create-cluster.yaml
        parameters:
          name: ${{ parameters.name }}
          displayName: ${{ parameters.displayName }}
          clusterType: ${{ parameters.dummyClusterType }}
          clusterName: ${{ parameters.dummyClusterName }}-$(commitID)
          vmSize: ${{ parameters.vmSize }}
          k8sVersion: ${{ parameters.k8sVersion }}
          dependsOn: ${{ parameters.dependsOn }}
          region: $(REGION_DUALSTACKOVERLAY_CLUSTER_TEST) # Swiftv2 has a specific region requirement and its the same with dualstack reagion

  - stage: ${{ parameters.name }}
    condition: and( succeeded(), not(eq(dependencies.dualstackoverlaye2e.result,'SucceededWithIssues')) ) # Cant use parameters in dependencies
    displayName: E2E - ${{ parameters.displayName }}
    dependsOn:
    - setup
    - publish
    - ${{ parameters.clusterName }}
    variables:
      GOPATH: "$(Agent.TempDirectory)/go" # Go workspace path
      GOBIN: "$(GOPATH)/bin" # Go binaries path
      modulePath: "$(GOPATH)/src/github.com/Azure/azure-container-networking"
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
    pool:
      name: $(BUILD_POOL_NAME_DEFAULT)
    jobs:
      - job: ${{ parameters.name }}_linux
        displayName: Swiftv2 Multitenancy E2E Test Suite | Linux - (${{ parameters.name }})
        pool:
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands:
          - agent.os -equals Linux
          - Role -equals $(CUSTOM_E2E_ROLE)
        steps:
          - template: swiftv2-e2e-step-template.yaml
            parameters:
              name: ${{ parameters.name }}
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: linux

      - job: failedE2ELogs_linux
        displayName: "Linux Failure Logs"
        dependsOn:
          - ${{ parameters.name }}_linux
        condition: in(dependencies.${{ parameters.name }}_linux.result, 'Failed')
        steps:
          - template: ../templates/log-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: linux
              cni: cniv2
