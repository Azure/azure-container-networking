pr: none
trigger: none

stages:
  - stage: update_cilium_version
    displayName: "Update Cilium Version and Restart Nodes"
    jobs:
      - job: update_version
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
                echo "Redeploy all cilium components and update cilium version. Redeploy all to catch all changes between versions"
                echo "deploy Cilium ConfigMap"
                kubectl apply -f cilium/configmap.yaml
                kubectl apply -f test/integration/manifests/cilium/cilium-config.yaml
                echo "install Cilium ${CILIUM_VERSION_TAG}"
                envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/daemonset.yaml | kubectl apply -f -
                envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/deployment.yaml | kubectl apply -f -
                kubectl apply -f test/integration/manifests/cilium/cilium-agent
                kubectl apply -f test/integration/manifests/cilium/cilium-operator
                vmss_name=$(az vmss list -g MC_${CLUSTER}_${CLUSTER}_$(LOCATION) --query "[].name" -o tsv)
                make -C ./hack/aks restart-vmss AZCLI=az CLUSTER=${CLUSTER} REGION=$(LOCATION) VMSS_NAME=$vmss_name
                kubectl get node 
                kubectl get pod -A
            name: "UpdateCiliumVersion"
            displayName: "Update Cilium Version"
  - stage: scale_up_cluster
    displayName: "Scale Up Cluster"
    jobs:
      - job: scale_up
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
                az aks nodepool scale --name nodepool1 --cluster-name ${CLUSTER} --resource-group ${CLUSTER} --node-count 1000
            name: "ScaleUpCluster"
            displayName: "Scale up cluster"
  - stage: label_nodes
    displayName: "Label Nodes for Testing"
    jobs:
      - job: label_nodes
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                echo "Set node label scale-test=true and connectivity-test=true for testing"
                az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
                cd test/scale 
                chmod +x label-nodes.sh
                ./label-nodes.sh
            name: "LabelNodes"
            displayName: "Label all Nodes"
  - stage: scale_cluster_deployments
    displayName: "Scale deploments for Network Policies Check"
    jobs:
      - job: scale_deployments
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                echo "scale deployment and to prep for network policies test"
                az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
                cd test/scale
                chmod +x test-scale.sh
                ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=200 --num-real-deployments=1 --num-real-replicas=80 --num-network-policies=2000 --num-unapplied-network-policies=2000 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=1 --delete-labels
            name: "scaling"
            displayName: "Run scale script"
  - stage: test_network_policies_connectivity
    displayName: "Test Network Policies"
    jobs:
      - job: network_policies
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                echo "Run network policies test"
                az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
                cd test/scale/connectivity
                chmod +x test-connectivity.sh
                ./test-connectivity.sh --num-scale-pods-to-verify=40 --max-wait-for-initial-connectivity=600 --max-wait-after-adding-netpol=120
            name: "TestNetworkPolicies"
            displayName: "Network Policies Scale Test"
  - stage: test_lb_services
    displayName: "Test Load Balancing Service"
    jobs:
      - job: deploy_service
        steps:
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
                cd test/scale
                chmod +x test-scale.sh
                ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=200 --num-real-deployments=1 --num-real-replicas=60 --num-network-policies=10 --num-unapplied-network-policies=10 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=1 --delete-labels
            name: "TestLBServices"
            displayName: "LB Services Scale Test"
  - stage: scale_down_cluster_1
    displayName: "Scale Down Cluster 1000-700"
    jobs:
      - job: scale_down
        steps:
          - template: ../scale-test-templates/scale-down-cluster.yaml
            parameters:
              clusterName: "cilium-scale"
              nodeCount1: 900
              nodeCount2: 800
              nodeCount3: 700
  - stage: scale_down_cluster_2
    displayName: "Scale Down Cluster 700-400"
    jobs:
      - job: scale_down
        steps:
          - template: ../scale-test-templates/scale-down-cluster.yaml
            parameters:
              clusterName: "cilium-scale"
              nodeCount1: 600
              nodeCount2: 500
              nodeCount3: 400
  - stage: scale_down_cluster_3
    displayName: "Scale Down Cluster 400-5"
    jobs:
      - job: scale_down
        steps:
          - template: ../scale-test-templates/scale-down-cluster.yaml
            parameters:
              clusterName: "cilium-scale"
              nodeCount1: 300
              nodeCount2: 200
              nodeCount3: 5
  - stage: delete_test_namespaces
    displayName: "Delete Test Namespaces"
    jobs:
      - job: delete_namespaces
        steps:
        - task: AzureCLI@1
          inputs:
            azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
            scriptLocation: "inlineScript"
            scriptType: "bash"
            addSpnToEnvironment: true
            inlineScript: |
              echo "scale deployment and test network policies"
              az aks get-credentials --resource-group ${CLUSTER} --name ${CLUSTER}
              kubectl delete ns scale-test
              kubectl delete ns connectivity-test
              kubectl get ns
          name: "DeleteTestNamespaces"
          displayName: "Delete Test Namespaces"
                
