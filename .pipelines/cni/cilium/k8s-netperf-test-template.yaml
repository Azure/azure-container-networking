parameters:
  - name: resourceGroup
    type: string
    default: ''
  - name: clusterName
    type: string
    default: ''
  - name: name
    type: string
    default: ''
  - name: numDeployments
    type: number
    default: 0
  - name: numReplicasPerDeployment
    type: number
    default: 0
  - name: numPolicies
    type: number
    default: 0
  - name: numUnappliedPolicies
    type: number
    default: 0
  - name: numServices
    type: number
    default: 0

steps:
  - task: AzureCLI@2
    name: "throughput_${{parameters.name}}"
    displayName: "Setup ${{parameters.name}} pod throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x test-scale.sh
        ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=${REAL_PODS_PER_NODE_NETPOL} --num-real-deployments=${{ parameters.numDeployments }} --num-real-replicas=${{ parameters.numReplicasPerDeployment }} --num-network-policies=${{ parameters.numPolicies }} --num-unapplied-network-policies=${{ parameters.numUnappliedPolicies }} --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=${{ parameters.numServices }} --delete-labels
        
        echo "Number of pods in scale test namespace"
        kubectl get pods -owide -n scale-test --no-headers | wc -l
        echo "Number of network policies in scale test namespace"
        kubectl get networkpolicies -owide -n scale-test --no-headers | wc -l
        echo "Number of services in scale test namespace"
        kubectl get svc -owide -n scale-test --no-headers | wc -l

  - task: AzureCLI@2
    name: "throughput_test_${{parameters.name}}"
    displayName: "Test ${{ parameters.name }} throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        # Apply and run tests                
        az aks get-credentials --resource-group ${{ parameters.resourceGroup }} --name ${{ parameters.clusterName }}
        cd hack/scripts/
        chmod +x k8s-netperf.sh
        bash k8s-netperf.sh

        # Copy test results into staging directory
        ARTIFACT_DIR=$(Build.ArtifactStagingDirectory)/throughput/${{ parameters.name }}
        mkdir -p $ARTIFACT_DIR
        sudo cp ./*.log $ARTIFACT_DIR

  - task: AzureCLI@2
    name: "throughput_cleanup_${{parameters.name}}"
    displayName: "Cleanup ${{parameters.name}} throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x delete-dep.sh
        ./delete-dep.sh
        
        echo "Number of pods in scale test namespace"
        kubectl get pods -owide -n scale-test --no-headers | wc -l
        echo "Number of network policies in scale test namespace"
        kubectl get networkpolicies -owide -n scale-test --no-headers | wc -l
        echo "Number of services in scale test namespace"
        kubectl get svc -owide -n scale-test --no-headers | wc -l
