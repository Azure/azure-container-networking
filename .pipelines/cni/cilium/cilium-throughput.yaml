steps:
  - task: AzureCLI@2
    name: throughput_setup
    displayName: "Setup netperf"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}
        kubectl apply -f hack/manifests/k8s-netperf.yaml

        ARTIFACT_DIR=$(Build.ArtifactStagingDirectory)/throughput
        mkdir -p $ARTIFACT_DIR
        echo $ARTIFACT_DIR

  - task: AzureCLI@2
    name: throughput_baseline
    displayName: "Setup baseline pod throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x test-scale.sh
        ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=${REAL_PODS_PER_NODE_NETPOL} --num-real-deployments=0 --num-real-replicas=0 --num-network-policies=0 --num-unapplied-network-policies=0 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=0 --delete-labels
        echo "Listing pods in scale test namespace"
        kubectl get pods -Aowide -n scale-test
  - template: k8s-netperf-test-template.yaml
    parameters:
      resourceGroup: "$(RESOURCE_GROUP)"
      clusterName: "$(CLUSTER)"
      name: "none"

  - task: AzureCLI@2
    name: throughput_pods
    displayName: "Setup backend pod throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x test-scale.sh
        ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=${REAL_PODS_PER_NODE_NETPOL} --num-real-deployments=2 --num-real-replicas=2 --num-network-policies=0 --num-unapplied-network-policies=0 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=0 --delete-labels
        echo "Number of pods in scale test namespace"
        kubectl get pods -Aowide -n scale-test | wc -l
  - template: k8s-netperf-test-template.yaml
    parameters:
      resourceGroup: "$(RESOURCE_GROUP)"
      clusterName: "$(CLUSTER)"
      name: "pods"
  

  - task: AzureCLI@2
    name: throughput_netpol
    displayName: "Setup network policies with pods throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x test-scale.sh
        ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=${REAL_PODS_PER_NODE_NETPOL} --num-real-deployments=3 --num-real-replicas=3 --num-network-policies=2 --num-unapplied-network-policies=2 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=0 --delete-labels
        echo "Number of pods in scale test namespace"
        kubectl get pods -Aowide -n scale-test | wc -l
        echo "Number of network policies in scale test namespace"
        kubectl get networkpolicies -Aowide -n scale-test | wc -l
  - template: k8s-netperf-test-template.yaml
    parameters:
      resourceGroup: "$(RESOURCE_GROUP)"
      clusterName: "$(CLUSTER)"
      name: "network_policies"
  
  - task: AzureCLI@2
    name: throughput_svc
    displayName: "Setup services with pods throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x test-scale.sh
        ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=${REAL_PODS_PER_NODE_NETPOL} --num-real-deployments=4 --num-real-replicas=4 --num-network-policies=0 --num-unapplied-network-policies=0 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=3 --delete-labels
        echo "Number of pods in scale test namespace"
        kubectl get pods -Aowide -n scale-test | wc -l
        echo "Number of network policies in scale test namespace"
        kubectl get networkpolicies -Aowide -n scale-test | wc -l
        echo "Number of services in scale test namespace"
        kubectl get svc -Aowide -n scale-test | wc -l
  - template: k8s-netperf-test-template.yaml
    parameters:
      resourceGroup: "$(RESOURCE_GROUP)"
      clusterName: "$(CLUSTER)"
      name: "services"

  - task: AzureCLI@2
    name: throughput_netpol_and_svc
    displayName: "Setup network policies and services with pods throughput"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/scale
        chmod +x test-scale.sh
        ./test-scale.sh --max-kwok-pods-per-node=0 --num-kwok-deployments=0 --num-kwok-replicas=0 --max-real-pods-per-node=${REAL_PODS_PER_NODE_NETPOL} --num-real-deployments=5 --num-real-replicas=5 --num-network-policies=4 --num-unapplied-network-policies=4 --num-unique-labels-per-pod=0 --num-unique-labels-per-deployment=5 --num-shared-labels-per-pod=3 --num-real-services=4 --delete-labels
        echo "Number of pods in scale test namespace"
        kubectl get pods -Aowide -n scale-test | wc -l
        echo "Number of network policies in scale test namespace"
        kubectl get networkpolicies -Aowide -n scale-test | wc -l
        echo "Number of services in scale test namespace"
        kubectl get svc -Aowide -n scale-test | wc -l
  - template: k8s-netperf-test-template.yaml
    parameters:
      resourceGroup: "$(RESOURCE_GROUP)"
      clusterName: "$(CLUSTER)"
      name: "network_policies_and_services"

  - task: PublishBuildArtifacts@1
    name: throughput_artifacts
    inputs:
      artifactName: throughput
      pathtoPublish: "$(Build.ArtifactStagingDirectory)/throughput/"
    condition: always()
    displayName: "Publish Artifacts"
  
  - task: AzureCLI@2
    name: throughput_cleanup
    displayName: "Cleanup netperf resources"
    inputs:
      azureSubscription: $(TEST_SUB_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |                
        az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}
        kubectl delete deployment netperf-pod
        kubectl delete ds netperf-pod
        kubectl delete ds netperf-host
        kubectl delete svc netperf-server
    condition: always()
