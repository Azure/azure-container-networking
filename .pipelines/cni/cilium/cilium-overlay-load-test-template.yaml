parameters:
  dependsOn: ""
  name: "cilium"
  clusterType: "overlay-byocni-nokubeproxy-up"
  clusterName: "cilium-overlay"
  nodeCount: 10
  vmSize: "Standard_DS4_v2"
  os: "linux"

stages:
  - stage: create_${{ parameters.name }}
    condition: and( succeeded(), or( contains(variables.CNI, 'cilium') , contains(variables.CNI, 'all') ) )
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['SetEnvVars.commitID'] ]
    dependsOn:
      - setup
    displayName: "Create Cluster - ${{ parameters.clusterName }}"
    jobs:
      - job: create_aks_cluster_with_${{ parameters.name }}
        pool:
          name: "$(BUILD_POOL_NAME_DEFAULT)"
        steps:
          - template: ../load-test-templates/create-cluster-template.yaml
            parameters:
              clusterType: ${{ parameters.clusterType }}
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              nodeCount: ${{ parameters.nodeCount }}
              vmSize: ${{ parameters.vmSize }}
              region: $(LOCATION)

  - stage: ${{ parameters.name }}
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['SetEnvVars.commitID'] ]
      cnsVersion: $[ stagedependencies.setup.env.outputs['SetEnvVars.cnsVersion'] ]
      dropgzVersion: $[ stagedependencies.setup.env.outputs['SetEnvVars.dropgzVersion'] ]
    pool:
      name: "$(BUILD_POOL_NAME_DEFAULT)"
    dependsOn:
      - create_${{ parameters.name }}
      - setup
    displayName: "Cilium Test - ${{ parameters.name }}"
    jobs:
      - job: deploy_cilium_components
        steps:
          - task: AzureCLI@1
            displayName: "Install Cilium, CNS, and ip-masq-agent"
            inputs:
              azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -ex
                az extension add --name aks-preview
                make -C ./hack/aks set-kubeconf AZCLI=az CLUSTER=${{ parameters.clusterName }}-$(commitID)
                ls -lah
                pwd
                kubectl cluster-info
                kubectl get po -owide -A

                echo "deploy Cilium ConfigMap"
                kubectl apply -f cilium/configmap.yaml
                kubectl apply -f test/integration/manifests/cilium/cilium-config.yaml
                echo "install Cilium ${CILIUM_VERSION_TAG} onto Overlay Cluster"
                # Passes Cilium image to daemonset and deployment
                envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/daemonset.yaml | kubectl apply -f -
                envsubst '${CILIUM_VERSION_TAG},${CILIUM_IMAGE_REGISTRY}' < test/integration/manifests/cilium/deployment.yaml | kubectl apply -f -
                kubectl get po -owide -A

                echo "Deploy Azure-CNS"
                sudo -E env "PATH=$PATH" make test-integration CNS_VERSION=$(cnsVersion) CNI_DROPGZ_VERSION=$(dropgzVersion) INSTALL_CNS=true INSTALL_OVERLAY=true TEST_DROPGZ=${{ parameters.testDropgz }} CNS_IMAGE_REPO=$(CNS_IMAGE_REPO)
                kubectl get po -owide -A
      - job: deploy_pods
        displayName: "Scale Test"
        dependsOn: deploy_cilium_components
        steps:
          - template: ../load-test-templates/pod-deployment-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              scaleup: ${SCALEUP_CILIUM}
              os: linux
              iterations: ${ITERATIONS_CILIUM}
              nodeCount: ${{ parameters.nodeCount }}
              cni: cilium
          - template: ../load-test-templates/validate-state-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
      - job: restart_nodes
        displayName: "Restart Test"
        dependsOn: deploy_pods
        steps:
          - template: ../load-test-templates/restart-node-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: ${{ parameters.os }}
              nodeCount: ${{ parameters.nodeCount }}
              scaleup: ${SCALEUP_CILIUM}
              cni: cilium
          - template: ../load-test-templates/validate-state-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              restartCase: "true"
              cnsManagedEndpoint: "true"
      - job: restart_cns
        displayName: "Restart and Validate CNS"
        dependsOn: restart_nodes
        steps:
          - template: ../load-test-templates/restart-cns-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: ${{ parameters.os }}
              scaleup: ${SCALEUP_CILIUM}
              nodeCount: ${{ parameters.nodeCount }}
              cni: cilium
      - job: cni_tests
        displayName: "Cilium Test"
        dependsOn: restart_cns
        steps:
          - script: |
              echo "install cilium CLI"
              CILIUM_CLI_VERSION=v0.13.2
              CLI_ARCH=amd64
              curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/download/${CILIUM_CLI_VERSION}/cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
              sha256sum --check cilium-linux-${CLI_ARCH}.tar.gz.sha256sum
              sudo tar xzvfC cilium-linux-${CLI_ARCH}.tar.gz /usr/local/bin
              rm cilium-linux-${CLI_ARCH}.tar.gz{,.sha256sum}
            name: "InstallCiliumCli"
            displayName: "Install Cilium CLI"
          - task: AzureCLI@1
            inputs:
              azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
              scriptLocation: "inlineScript"
              scriptType: "bash"
              addSpnToEnvironment: true
              inlineScript: |
                set -ex
                make -C ./hack/aks set-kubeconf AZCLI=az CLUSTER=${{ parameters.clusterName }}-$(commitID)
            name: "GetCluster"
            displayName: "Get AKS Cluster"
          - script: |
              kubectl delete ns load-test
              cilium connectivity test
            retryCountOnTaskFailure: 6
            name: "CiliumConnectivityTests"
            displayName: "Run Cilium Connectivity Tests"
      - job: failedE2ELogs
        displayName: "Failure Logs"
        dependsOn:
          - deploy_cilium_components
          - deploy_pods
          - restart_nodes
          - restart_cns
          - cni_tests
        condition: failed()
        steps:
          - template: ../../templates/log-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: linux
              cni: cilium
