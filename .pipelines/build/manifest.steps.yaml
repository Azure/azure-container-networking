parameters:
- name: name
  type: string

- name: image_tag
  type: string

- name: platforms
  type: object
  default: []


steps:
- bash: |
    set -e
    MANIFEST_DATA=$(echo "$IMAGE_PLATFORM_DATA" | \
      jq -r '.[] | 
        .args = [ (.platform | split("/")[0]), (.platform     | split("/")[1]) ] | 
        .args = [ ("--os "   + .args[0]     ), ("--arch " + .args[1]     ) ] | 
        if .osVersion then .args += ["--os-version " + .osVersion] else . end    |
        { image: .imageReference, annotate: .args }' | \
      jq -crs)
    echo >&2 "##vso[task.setvariable variable=${IMAGE_NAME}_MANIFEST]$MANIFEST_DATA"
  displayName: "Generate Manifest Data"
  env:
    IMAGE_NAME: ${{ upper(replace(parameters.name, '-', '_')) }}
    IMAGE_PLATFORM_DATA: '${{ convertToJson(parameters.platforms) }}'

- task: onebranch.pipeline.containercontrol@1
  displayName: "Login to ACR"
  inputs:
    command: login
    endpoint: $(ACR_ARM_SERVICE_CONNECTION)
  
- task: onebranch.pipeline.imagebuildinfo@1
  inputs:
    repositoryName: $(IMAGE_REPO_PATH)/${{ parameters.name }}
    registry: $(ACR).azurecr.io
    build_tag: ${{ parameters.image_tag }}
    manifest_push: true
    manifest: $(${{ upper(replace(parameters.name, '-', '_')) }}_MANIFEST)
