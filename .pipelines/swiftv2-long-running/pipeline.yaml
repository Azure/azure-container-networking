trigger:
- main

parameters:
  - name: subscriptionId
    type: string
    default: "37deca37-c375-4a14-b90a-043849bd2bf1"
  - name: location
    type: string
    default: "centraluseuap"
  - name: resourceGroupName
    type: string
    default: "long-run-$(date +%s)"
  - name: vmSkuDefault
    type: string
    default: "Standard_D2s_v3"
  - name: vmSkuHighNIC
    type: string
    default: "Standard_D16s_v3"
  - name: serviceConnection
    displayName: "Azure Service Connection"
    type: string
    default: "Azure Container Networking - Standalone Test Service Connection"

stages:
  - stage: AKSClusterAndNetworking
    displayName: "Stage: AKS Cluster and Networking Setup"
    jobs:
      - template: template/long-running-pipeline-template.yaml
        parameters:
          jobName: create_aks
          scriptPath: "scripts/create_aks.sh"
          subscriptionId: ${{ parameters.subscriptionId }}
          location: ${{ parameters.location }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          vmSkuDefault: ${{ parameters.vmSkuDefault }}
          vmSkuHighNIC: ${{ parameters.vmSkuHighNIC }}
          dependsOn: []

      - template: template/long-running-pipeline-template.yaml
        parameters:
          jobName: create_vnets
          scriptPath: "scripts/create_vnets.sh"
          subscriptionId: ${{ parameters.subscriptionId }}
          location: ${{ parameters.location }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          dependsOn: ["create_aks"]

      - template: template/long-running-pipeline-template.yaml
        parameters:
          jobName: create_peerings
          scriptPath: "scripts/create_peerings.sh"
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          dependsOn: ["create_vnets"]

      - template: template/long-running-pipeline-template.yaml
        parameters:
          jobName: create_storage
          scriptPath: "scripts/create_storage.sh"
          subscriptionId: ${{ parameters.subscriptionId }}
          location: ${{ parameters.location }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          dependsOn: ["create_peerings"]

      - template: template/long-running-pipeline-template.yaml
        parameters:
          jobName: create_nsg
          scriptPath: "scripts/create_nsg.sh"
          subscriptionId: ${{ parameters.subscriptionId }}
          resourceGroupName: ${{ parameters.resourceGroupName }}
          dependsOn: ["create_storage"]
