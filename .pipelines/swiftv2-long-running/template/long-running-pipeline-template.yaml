parameters:
  - name: subscriptionId
    type: string
  - name: location
    type: string
  - name: resourceGroupName
    type: string
  - name: vmSkuDefault
    type: string
  - name: vmSkuHighNIC
    type: string
  - name: serviceConnection
    type: string

stages:
  - stage: AKSClusterAndNetworking
    displayName: "Stage: AKS Cluster and Networking Setup"
    jobs:
      # ------------------------------------------------------------
      # Job 1: Create AKS Cluster
      # ------------------------------------------------------------
      - job: CreateCluster
        displayName: "Create AKS Clusters"
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self
          - task: AzureCLI@2
            displayName: "Run create_aks.sh"
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: bash
              scriptLocation: scriptPath
              scriptPath: ".pipelines/swiftv2-long-running/scripts/create_aks.sh"
              arguments: >
                ${{ parameters.subscriptionId }}
                ${{ parameters.location }}
                ${{ parameters.resourceGroupName }}
                ${{ parameters.vmSkuDefault }}
                ${{ parameters.vmSkuHighNIC }}

      # ------------------------------------------------------------
      # Job 2: Networking & Storage
      # ------------------------------------------------------------
      - job: NetworkingAndStorage
        displayName: "Networking and Storage Setup"
        pool:
          vmImage: ubuntu-latest
        steps:
          - checkout: self

          # Task 1: Create VNets
          - task: AzureCLI@2
            displayName: "Create customer vnets"
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: bash
              scriptLocation: scriptPath
              scriptPath: ".pipelines/swiftv2-long-running/scripts/create_vnets.sh"
              arguments: >
                ${{ parameters.subscriptionId }}
                ${{ parameters.location }}
                ${{ parameters.resourceGroupName }}

          # Task 2: Create Peerings
          - task: AzureCLI@2
            displayName: "Create customer vnet peerings"
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: bash
              scriptLocation: scriptPath
              scriptPath: ".pipelines/swiftv2-long-running/scripts/create_peerings.sh"
              arguments: >
                ${{ parameters.resourceGroupName }}

          # Task 3: Create Storage Accounts
          - task: AzureCLI@2
            name: CreateStorageTask
            displayName: "Create storage accounts"
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: bash
              scriptLocation: scriptPath
              scriptPath: ".pipelines/swiftv2-long-running/scripts/create_storage.sh"
              arguments: >
                ${{ parameters.subscriptionId }}
                ${{ parameters.location }}
                ${{ parameters.resourceGroupName }}

          # Set storage account names as variables for later tasks
          - script: |
              echo "##vso[task.setvariable variable=StorageAccount1]$(StorageAccount1)"
              echo "##vso[task.setvariable variable=StorageAccount2]$(StorageAccount2)"
            displayName: "Set storage account variables"

          # Task 4: Create NSG
          - task: AzureCLI@2
            displayName: "Create network security groups to restrict access between subnets."
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: bash
              scriptLocation: scriptPath
              scriptPath: ".pipelines/swiftv2-long-running/scripts/create_nsg.sh"
              arguments: >
                ${{ parameters.subscriptionId }}
                ${{ parameters.resourceGroupName }}
                ${{ parameters.location }}

          # Task 5: Create Private Endpoint
          - task: AzureCLI@2
            displayName: "Create Private Endpoint for Storage Account."
            inputs:
              azureSubscription: ${{ parameters.serviceConnection }}
              scriptType: bash
              scriptLocation: scriptPath
              scriptPath: ".pipelines/swiftv2-long-running/scripts/create_private_endpoint.sh"
              arguments: >
                ${{ parameters.subscriptionId }}
                ${{ parameters.location }}
                ${{ parameters.resourceGroupName }}
                $(StorageAccount1)
                $(StorageAccount2)
