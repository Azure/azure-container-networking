###########################
#### Mariner UnitTests ####
###########################
# Description:
# Concrete implementation of the template.unit-test.jobs.yaml class. Creates
# steps for running the full ACN suite on a Mariner system.


jobs:

- job: mariner
  displayName: "Mariner"
  pool:
    type: linux
  variables:
    LinuxContainerImage: $(LinuxContainerImage)
  steps:

  - checkout: azure-container-networking

  - template: /cicd/pkg/toolsets/template.installer.steps.yaml@self
    parameters:
      os: mariner
      toolset: docker-utilities

  - template: /cicd/pkg/toolsets/template.toolset.steps.yaml@self
    parameters:
      os: mariner
      install:
      - net-tools
      - lsof

  - bash: |
      #set -e
      sudo netstat -tulpn
      pushd "$ACN_PATH"
        make tools
      popd
      echo "lsof:"
      sudo lsof -i :42424
      echo "netstat:"
      netstat -tulpn
      echo "files:"
      ls -al /run/docker/plugins
      echo "docker plugin ls:"
      docker plugin ls
    displayName: "Make Test Tools"

  - bash: |
      #set -e
      pushd "$ACN_PATH"
        COVERAGE_FILTER=$(go list --tags ignore_uncovered,ignore_autogenerated ./... | tr '\n' ',')
        echo >&2 "##vso[task.setvariable variable=COVERAGE_FILTER;]$COVERAGE_FILTER"
      popd
      echo "lsof:"
      sudo lsof -i :42424
      echo "netstat:"
      netstat -tulpn
    displayName: 'Generate Coverage Filter'

  - task: Go@0
    retryCountOnTaskFailure: 3
    displayName: "Run Unit Tests (Mariner)"
    inputs:
      command: 'test'
      arguments: "-mod=readonly -buildvcs=false -tags 'unit' --skip 'TestE2E*' -coverpkg=$(COVERAGE_FILTER) -race -covermode atomic -coverprofile=coverage.out ./..."
      workingDirectory: '$(ACN_PATH)'

  - bash: |
      set -e
      pushd "$ACN_PATH"
         ./build/tools/go-junit-report -in coverage.out -iocopy -out "$OB_OUTPUTDIRECTORY/report-mariner.xml"
      popd
      echo "lsof:"
      sudo lsof -i :42424
      echo "netstat:"
      netstat -tulpn
    displayName: 'Generate XML Coverage Report'

  # This task is performed automatically
  #
  #- task: PublishPipelineArtifact@1
  #  inputs:
  #    artifactName: report-mariner
  #    pathtoPublish: '$(ACN_PATH)/report-mariner.xml'
