########################################################################################
# OBP Signed Binaries Pipeline
########################################################################################
# Pipeline for uploading presigned binaries to a predefined list of storage accounts. 
# This pipeline also publishes the corresponding NuGet packages to the ACN NuGet feed.
#
# # A list of the creators/maintainers of this pipeline. 
# # Feel free to add yourself to the list if you make changes.
# # If you have questions about the pipeline's operation, function, etc. feel free to contact them.
# # You may also reach out on the appropriate Team's channel.
# Owners: 
#   - estabanca
#   - shtrudo
#
# Teams Channel: [Pipelines](https://teams.microsoft.com/l/channel/19%3adb3193bfd6c84f1eba2d5a6981e4e611%40thread.skype/Pipelines?groupId=1eb27b57-8ace-4f0e-a9a9-e6db4e9829b7&tenantId=72f988bf-86f1-41af-91ab-2d7cd011db47)
###############################################################################################################################
# Stages
#   - prepare_stage - First stage of the pipeline meant to set up anything that the following stages require before continuing.
#     outputs:
#       get_version.version (string) - A string representing the current cni release version that is being published/uploaded.
#         <scope: dependsOn prepare-stage>
#
#   - upload_signed_binaries (template[stages]) 
#
#   - publish_nuget_packages (template[stages])
###############################################################################################################################

# TODO: Comment out this trigger when you want to make auto triggers from master
#       on the pipeline. If you use this as a separate pipeline.
trigger:
  - none

resources:
  pipelines:
  - pipeline: networking_aquarius_official
    source: "Networking-Aquarius-Official"
    trigger:
      branches:
        include:
          - master
  repositories:
  # TODO: Change to an official service connection for integration with other pipelines.
  - repository: acn_master
    endpoint: "sheylatrudo"
    type: github
    name: sheylatrudo/azure-container-networking
    ref: smtrudo/obp-signed-binaries-pipeline
  #- repository: acn_master
  #  endpoint: "Azure Container Networking - readonly"
  #  type: github
  #  name: Azure/azure-container-networking
  #  ref: refs/heads/master
  #  # Add trigger none when the above trigger none is removed.
  #  trigger: none

stages:
  # TODO: May want to add a ManualValidation task to prepare_stage for manual queues. Or not.
  #       Depends on if we consider a manual queue a mistake or not.
  # e.g.
  # - job: waitForValidation
  #  displayName: Wait for external validation  
  #  pool: server
  #  timeoutInMinutes: 4320 # job times out in 3 days
  #  steps:   
  #   - task: ManualValidation@0
  #     timeoutInMinutes: 1440 # task times out in 1 day
  #     inputs:
  #         notifyUsers: |
  #            someone@example.com
  #         instructions: 'Please validate the manual queue.'
  #         onTimeout: 'reject'
- stage: prepare_stage
  displayName: Initialize
  jobs:
  - job: prepare_version
    displayName: Prepare Version Info
    steps:
      # If the utility script is not used, checkout should be none.
      # The acn_master resource should also be removed.
      #- checkout: none
      - template: ./obp-signed-binaries/get-utility-scripts.steps.yaml

      - download: networking_aquarius_official
        artifact: drop_download_github
        patterns: "@(azure-vnet)"

      - bash: |
          set -e
          . $ACN_UTILS
          VNET_BIN=$(find $(Pipeline.Workspace) -type f -maxdepth 4 -name 'azure-vnet')
          echo "Found Binary: $VNET_BIN"
          chmod +x "$VNET_BIN"
          VERSION=$("$VNET_BIN" --version | awk '{ print $4 }')

          aquarius::tools::var version output "${VERSION}"
        name: get_version
        displayName: Get Release Version

- template: ./obp-signed-binaries/upload-signed-binaries.stages.yaml

- template: ./obp-signed-binaries/publish-nuget-packages.stages.yaml
