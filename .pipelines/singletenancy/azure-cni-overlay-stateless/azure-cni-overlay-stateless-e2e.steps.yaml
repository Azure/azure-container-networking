parameters:
  name: ""
  clusterName: ""
  os: ""

steps:
  - task: KubectlInstaller@0
    inputs:
      kubectlVersion: latest

  - task: AzureCLI@2
    displayName: "Set Kubeconfig"
    env:
      AZCLI: az
      CLUSTER: ${{ parameters.clusterName }}
    inputs:
      azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        set -e
        make -C ./hack/aks set-kubeconf

  - script: |
      nodeList=`kubectl get node -owide | grep Windows | awk '{print $1}'`
      for node in $nodeList; do
        taint=`kubectl describe node $node | grep Taints | awk '{print $2}'`
        if [ $taint == "node.cloudprovider.kubernetes.io/uninitialized=true:NoSchedule" ]; then
            kubectl taint nodes $node node.cloudprovider.kubernetes.io/uninitialized=true:NoSchedule-
        fi
      done
      sudo -E env "PATH=$PATH" make test-load CNS_VERSION=$(make cns-version) CNI_VERSION=$(make cni-version)
    displayName: "Windows v4Overlay ControlPlane Scale Tests"
    retryCountOnTaskFailure: 2
    env:
      SCALE_UP: 32
      OS_TYPE: windows
      CNI_TYPE: stateless
      VALIDATE_STATEFILE: true
      INSTALL_CNS: true
      INSTALL_AZURE_VNET_STATELESS: true
      VALIDATE_V4OVERLAY: true
      CLEANUP: true

  - task: AzureCLI@2
    displayName: "Restart Nodes"
    env:
      AZCLI: az
      CLUSTER: ${{ parameters.clusterName }}
      SCALE_UP: ${{ coalesce(parameters.scaleup, 32) }}
      RESOURCE_GROUP: "MC_${{ parameters.clusterName }}_${{ parameters.clusterName }}_$(REGION_AKS_CLUSTER_TEST)"
      REGION: $(REGION_AKS_CLUSTER_TEST)
    inputs:
      azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        set -e
        kubectl get po -owide -A
        echo "Restarting nodes"
        for val in $(az vmss list -g "$RESOURCE_GROUP" --query "[].name" -o tsv); do
          make -C ./hack/aks restart-vmss VMSS_NAME=${val}
        done

  - task: AzureCLI@2
    displayName: "Validate Node Restart"
    retryCountOnTaskFailure: 3
    env:
      AZCLI: az
      CLUSTER: ${{ parameters.clusterName }}
      REGION: $(REGION_AKS_CLUSTER_TEST)
      SCALE_UP: ${{ parameters.scaleup }}
      RESTART_CASE: true
      CNI_TYPE: stateless
    inputs:
      azureSubscription: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        cd test/integration/load
        make -C ./hack/aks set-kubeconf
        make -C ./hack/aks azcfg
        kubectl get pods -owide -A
        echo "Validating Node Restart"
        go test -timeout 30m -tags load -run ^TestValidateState$

  - script: |
      echo "Run wireserver and metadata connectivity Tests"
      bash test/network/wireserver_metadata_test.sh
    retryCountOnTaskFailure: 3
    displayName: "Run Wireserver and Metadata Connectivity Tests"

  - script: |
      echo "IPv4 Overlay DataPath Test"
      cd test/integration/datapath
      sudo -E env "PATH=$PATH" go test -count=1 datapath_windows_test.go -timeout 3m -tags connection -restartKubeproxy true -run ^TestDatapathWin$
    displayName: "Windows v4Overlay Datapath Tests"
    retryCountOnTaskFailure: 3

