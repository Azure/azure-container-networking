parameters:
  - name: name
    type: string
    default: ""
  - name: displayName
    type: string
    default: ""
  - name: clusterType
    type: string
    default: ""
  - name: clusterName
    type: string
    default: ""
  - name: vmSize
    type: string
    default: ""
  - name: k8sVersion
    type: string
    default: ""
  - name: dependsOn
    type: string
    default: ""
  - name: scaleup
    type: string
    default: ""
  - name: os
    type: string
    default: ""

stages:
  - stage: ${{ parameters.clusterName }}
    displayName: Create Cluster - ${{ parameters.displayName }}
    condition: or(
        eq('${{ parameters.os }}', 'linux'),
        and(eq('${{ parameters.os }}', 'windows'), eq(dependencies.setup.outputs['env.GitDiffCheck.RunWindowsTests'], 'false'))
      )
    dependsOn:
      - ${{ parameters.dependsOn }}
      - setup
    pool:
      name: $(BUILD_POOL_NAME_DEFAULT)
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
      runWindowsTest: $[ stagedependencies.setup.env.outputs['GitDiffCheck.RunWindowsTests'] ]
    jobs:
      - job: debug_variables
        displayName: runWindowsTest print
        pool:
          name: $(BUILD_POOL_NAME_DEFAULT)
        steps:
          - script: |
              echo "runWindowsTest variable value: $(runWindowsTest)"
              echo "runWindowsTest variable type: $(echo $(runWindowsTest) | wc -c)"
            displayName: Print runWindowsTest
      
      - template: ../../templates/create-cluster.yaml
        parameters:
          name: ${{ parameters.name }}
          displayName: ${{ parameters.displayName }}
          clusterType: ${{ parameters.clusterType }}
          clusterName: ${{ parameters.clusterName }}-$(commitID)
          vmSize: ${{ parameters.vmSize }}
          vmSizeWin: ${{ parameters.vmSize }}
          k8sVersion: ${{ parameters.k8sVersion }}
          dependsOn: ${{ parameters.dependsOn }}
          os: ${{ parameters.os }}
          region: $(REGION_AKS_CLUSTER_TEST)

  - stage: ${{ parameters.name }}
    displayName: E2E - ${{ parameters.displayName }}
    dependsOn:
    - setup
    - publish
    - ${{ parameters.clusterName }}
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
      GOPATH: "$(Agent.TempDirectory)/go" # Go workspace path
      GOBIN: "$(GOPATH)/bin" # Go binaries path
      modulePath: "$(GOPATH)/src/github.com/Azure/azure-container-networking"
    pool:
      name: $(BUILD_POOL_NAME_DEFAULT)
    jobs:
      - job: ${{ parameters.name }}_${{ parameters.os }}
        displayName: Azure CNI Overlay Test Suite | ${{ parameters.os }} - (${{ parameters.name }})
        timeoutInMinutes: 120
        pool:
          name: $(BUILD_POOL_NAME_DEFAULT)
          demands:
          - agent.os -equals Linux
          - Role -equals $(CUSTOM_E2E_ROLE)
        steps:
          - template: azure-cni-overlay-e2e-step-template.yaml
            parameters:
              name: ${{ parameters.name }}
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: ${{ parameters.os }}
              scaleup: ${{ parameters.scaleup }} # 50 in windows or 100 in linux

      - template: ../../cni/k8s-e2e/k8s-e2e-job-template.yaml
        parameters:
          sub: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
          clusterName: ${{ parameters.clusterName }}-$(commitID)
          os: ${{ parameters.os }}
          dependsOn: ${{ parameters.name }}_${{ parameters.os }}
          datapath: true
          dns: true
          portforward: true
          hostport: true
          service: true
          hybridWin: ${{ eq(parameters.os, 'windows') }}

      - job: failedE2ELogs_${{ parameters.os }}
        displayName: "${{ parameters.os }} Failure Logs"
        dependsOn:
          - ${{ parameters.name }}_${{ parameters.os }}
          - CNI_${{ parameters.os }}
        condition: in(dependencies.${{ parameters.name }}_${{ parameters.os }}.result, 'Failed')
        steps:
          - template: ../../templates/log-template.yaml
            parameters:
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              os: ${{ parameters.os }}
              cni: cniv2

  - stage: delete_${{ parameters.clusterName }}
    displayName: Delete Cluster - ${{ parameters.displayName }}
    condition: always()
    dependsOn:
      - ${{ parameters.name }}
    variables:
      commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
    pool:
      name: $(BUILD_POOL_NAME_DEFAULT)
    jobs:
      - job: delete
        displayName: Delete Cluster
        steps:
          - template: ../../templates/delete-cluster.yaml
            parameters:
              name: ${{ parameters.name }}
              clusterName: ${{ parameters.clusterName }}-$(commitID)
              region: $(REGION_AKS_CLUSTER_TEST)
              sub: $(SUB_AZURE_NETWORK_AGENT_BUILD_VALIDATIONS)
              svcConn: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
