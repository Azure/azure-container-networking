parameters:
  name: ""
  testDropgz: ""
  clusterName: ""

steps:
  - bash: |
      echo $UID
      sudo rm -rf $(System.DefaultWorkingDirectory)/*
    displayName: "Set up OS environment"
  - checkout: self

  - bash: |
      go version
      go env
      mkdir -p '$(GOBIN)'
      mkdir -p '$(GOPATH)/pkg'
      mkdir -p '$(modulePath)'
      echo '##vso[task.prependpath]$(GOBIN)'
      echo '##vso[task.prependpath]$(GOROOT)/bin'
    name: "GoEnv"
    displayName: "Set up the Go environment"
  - task: AzureCLI@2
    inputs:
      azureSubscription: $(AZURE_TEST_AGENT_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        echo "Check az version"
        az version
        echo "Install az cli extension preview"
        az extension add --name aks-preview
        az extension update --name aks-preview
        mkdir -p ~/.kube/
        echo "Create AKS DualStack Overlay cluster"
        make -C ./hack/aks azcfg AZCLI=az REGION=$(REGION_OVERLAY_CLUSTER_TEST)
        make -C ./hack/aks dualstack-overlay-up AZCLI=az REGION=$(REGION_OVERLAY_CLUSTER_TEST) VM_SIZE=$(VM_SIZE) NODE_COUNT=$(NODE_COUNT) SUB=$(SUB_AZURE_NETWORK_AGENT_TEST) CLUSTER=${{ parameters.clusterName }}-$(make revision)
        echo "Dualstack Overlay Cluster is successfully created"
    displayName: Create DualStackOverlay cluster
    condition: succeeded()

  - script: |
      ls -lah
      pwd
      echo "installing kubectl"
      curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
      sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      kubectl cluster-info
      kubectl get node
      kubectl get po -owide -A
      sudo -E env "PATH=$PATH" make install-azure-images CNS_VERSION=$(make cns-version) CNI_DROPGZ_VERSION=$(make cni-dropgz-version) INSTALL_CNS=true INSTALL_AZURE_VNET=true INSTALL_DUALSTACK_OVERLAY=true TEST_DROPGZ=${{ parameters.testDropgz }}
      kubectl get po -owide -A
    retryCountOnTaskFailure: 3
    name: "installKubectl"
    displayName: "Install kubectl on AKS dualstack overlay cluster"

  - script: |
      cd test/integration/load
      echo "DualStack Overlay Linux control plane Node properties test"
      sudo go test -timeout 30m -tags load -run ^TestDualStackProperties$ -tags=load
      echo "DualStack Overlay Linux control plane Load test"
      sudo go test -timeout 30m -tags load -run ^TestLoad$ -tags=load
      echo "Delete Linux load-test namespace"
      kubectl delete ns load-test
      echo "DualStack Overlay Linux control plane CNS validation test"
      sudo go test -timeout 30m -tags load -cni cniv2 -run ^TestValidateState$ -tags=load
      cd ../datapath
      sudo go test -count=1 datapath_linux_test.go -timeout 1m -tags connection -run ^TestDatapathLinux$ -tags=connection,integration
    name: "DualStack_Overlay_Linux_tests"
    displayName: "DualStack Overlay Linux Tests"

  - task: AzureCLI@2
    inputs:
      azureSubscription: $(AZURE_TEST_AGENT_SERVICE_CONNECTION)
      scriptLocation: "inlineScript"
      scriptType: "bash"
      addSpnToEnvironment: true
      inlineScript: |
        echo "Deleting cluster"
        make -C ./hack/aks azcfg AZCLI=az
        make -C ./hack/aks down SUB=$(SUB_AZURE_NETWORK_AGENT_TEST) AZCLI=az CLUSTER=${{ parameters.clusterName }}-$(make revision)
        echo "Cluster and resources down"
    name: "CleanupDualStackOverlaycluster"
    displayName: "Cleanup DualStack Overlay Cluster"
    condition: always()