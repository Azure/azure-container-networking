stages:
- stage: setup
  displayName: ACN
  jobs:
  - job: env
    displayName: Setup
    steps:
      - script: |
          # To use the variables below, you must make the respective stage's dependsOn have - setup or it will not retain context of this stage
          BUILD_NUMBER=$(Build.BuildNumber)
          echo "##vso[task.setvariable variable=StorageID;isOutput=true]$(echo ${BUILD_NUMBER//./-})"
          echo "##vso[task.setvariable variable=commitID;isOutput=true]$(echo $(make revision)-$(date "+%d%H%M"))"
          echo "##vso[task.setvariable variable=Tag;isOutput=true]$(make version)"
          echo "##vso[task.setvariable variable=npmVersion;isOutput=true]$(make npm-version)"
          cat /etc/os-release
          uname -a
          sudo chown -R $(whoami):$(whoami) .
          go version
          go env
          which go
          echo $PATH
          echo "------"
          echo $(Build.QueuedBy)
          echo $(Build.Reason) # manual, PR, IndividualCI
          echo $(Build.SourceBranch)
        name: "EnvironmentalVariables"
        displayName: "Set environmental variables"

- template: templates/run-unit-tests.stages.yaml

#- ${{ if not(contains(variables['Build.SourceBranch'], 'refs/pull')) }}:
- stage: binaries
  displayName: Build Binaries
  dependsOn:
    - setup
    - test
  jobs:
  - job: build
    displayName: Build Binaries
    variables:
      STORAGE_ID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.StorageID'] ]
    steps:
    - task: GoTool@0
      inputs:
        version: $(GO_VERSION)

    - script: |
        make ipv6-hp-bpf-lib
        make all-binaries-platforms
      displayName: "Build all platform binaries"

    - script: |
        mkdir -p ./output/bins
        cd ./output
        find . -name '*.tgz' -print -exec mv -t ./bins/ {} +
        find . -name '*.zip' -print -exec mv -t ./bins/ {} +
        shopt -s extglob
        rm -rf !("bins")
      displayName: "Prepare Artifacts"

    - task: CopyFiles@2
      inputs:
        sourceFolder: "output"
        targetFolder: $(Build.ArtifactStagingDirectory)

    - task: 1ES.PublishPipelineArtifact@1
      inputs:
        artifactName: "output"
        targetPath: "$(Build.ArtifactStagingDirectory)"

- stage: containerize
  displayName: Build Images
  dependsOn:
    - setup
    - test
  templateContext:
    authenticatedContainerRegistries:
    - serviceConnection: $(ACR_SERVICECONNECTION)
  jobs:
  - template: containers/containerize.jobs.yaml
    parameters:
      targetOs: linux
      targetArch: amd64
      images:
      - azure-ipam
      - cni
      - cns
      - ipv6-hp-bpf
      - npm
  - template: containers/containerize.jobs.yaml
    parameters:
      targetOs: linux
      targetArch: arm64
      images:
      - azure-ipam
      - cni
      - cns
      - ipv6-hp-bpf
      - npm
  - template: containers/containerize.jobs.yaml
    parameters:
      targetOs: windows
      targetArch: amd64
      images:
      - azure-ipam
      - cni
      - cns
      - npm


- stage: publish
  displayName: Publish Multiarch Manifests
  dependsOn:
    - containerize
  variables:
    Packaging.EnableSBOMSigning: false
  jobs:
  - job: manifest
    displayName: Compile Manifests
    strategy:
      maxParallel: 4
      matrix:
        azure_ipam:
          name: azure-ipam
          platforms: linux/amd64 linux/arm64 windows/amd64
        cni:
          name: cni
          platforms: linux/amd64 linux/arm64 windows/amd64
        cns:
          name: cns
          platforms: linux/amd64 linux/arm64 windows/amd64
        ipv6_hp_bpf:
          name: ipv6-hp-bpf
          platforms: linux/amd64 linux/arm64
        npm:
          name: npm
          platforms: linux/amd64 linux/arm64 windows/amd64
    steps:
    - task: GoTool@0
      inputs:
        version: $(GO_VERSION)
    - template: containers/manifest-template.steps.yaml
      parameters:
        name: $(name)
        platforms: $(platforms)

# Cilium Podsubnet E2E tests
- template: singletenancy/cilium/cilium-e2e.jobs.yaml
  parameters:
    name: "cilium_e2e"
    displayName: Cilium
    clusterType: swift-byocni-nokubeproxy-up
    clusterName: "ciliume2e"
    vmSize: Standard_B2ms
    k8sVersion: ""
    dependsOn: "containerize"

# Cilium Nodesubnet E2E tests
- template: singletenancy/cilium-nodesubnet/cilium-nodesubnet-e2e.jobs.yaml
  parameters:
    name: "cilium_nodesubnet_e2e"
    displayName: Cilium NodeSubnet
    clusterType: nodesubnet-byocni-nokubeproxy-up
    clusterName: "cilndsubnete2e"
    vmSize: Standard_B2s
    k8sVersion: ""
    dependsOn: "containerize"

# Cilium Overlay E2E tests
- template: singletenancy/cilium-overlay/cilium-overlay-e2e.jobs.yaml
  parameters:
    name: "cilium_overlay_e2e"
    displayName: Cilium on AKS Overlay
    clusterType: overlay-byocni-nokubeproxy-up
    clusterName: "cilovere2e"
    vmSize: Standard_B2ms
    k8sVersion: ""
    dependsOn: "containerize"

# Cilium Dualstack Overlay E2E tests
- template: singletenancy/cilium-dualstack-overlay/cilium-dualstackoverlay-e2e.jobs.yaml
  parameters:
    name: "cilium_dualstackoverlay_e2e"
    displayName: Cilium on AKS DualStack Overlay
    os: linux
    clusterType: dualstack-byocni-nokubeproxy-up
    clusterName: "cildsovere2e"
    vmSize: Standard_B2ms
    k8sVersion: ""
    dependsOn: "containerize"

    # Cilium Overlay with hubble E2E tests
- template: singletenancy/cilium-overlay-withhubble/cilium-overlay-e2e.jobs.yaml
  parameters:
    name: "cilium_h_overlay_e2e"
    displayName: Cilium on AKS Overlay with Hubble
    clusterType: overlay-byocni-nokubeproxy-up
    clusterName: "cilwhleovere2e"
    vmSize: Standard_B2ms
    k8sVersion: ""
    dependsOn: "containerize"
    testHubble: true

# Azure Overlay E2E tests
- template: singletenancy/azure-cni-overlay/azure-cni-overlay-e2e.jobs.yaml
  parameters:
    name: "azure_overlay_e2e"
    displayName: Azure Overlay
    os: linux
    clusterType: overlay-byocni-up
    clusterName: "azovere2e"
    vmSize: Standard_B2ms
    k8sVersion: ""
    dependsOn: "containerize"

# Azure Overlay E2E Stateless CNI tests
- template: singletenancy/azure-cni-overlay-stateless/azure-cni-overlay-stateless-e2e.jobs.yaml
  parameters:
    name: "azure_overlay_stateless_e2e"
    displayName: Azure Stateless CNI Overlay
    os: windows
    clusterType: overlay-byocni-up
    clusterName: "statelesswin"
    vmSize: Standard_B2ms
    dependsOn: "containerize"

# AKS Swift E2E tests
- template: singletenancy/aks-swift/aks-swift-e2e.jobs.yaml
  parameters:
    name: "aks_swift_e2e"
    displayName: AKS Swift Ubuntu
    os: linux
    clusterType: swift-byocni-up
    clusterName: "swifte2e"
    vmSize: Standard_B2ms
    k8sVersion: ""
    dependsOn: "containerize"

# AKS Swift Vnet Scale E2E tests
- template: singletenancy/aks-swift/aks-swift-e2e.jobs.yaml
  parameters:
    name: "aks_swift_vnetscale_e2e"
    displayName: AKS Swift Vnet Scale Ubuntu
    os: linux
    clusterType: vnetscale-swift-byocni-up
    clusterName: "vscaleswifte2e"
    vmSize: Standard_B2ms
    k8sVersion: "1.30"
    dependsOn: "containerize"

# CNIv1 E2E tests
- template: singletenancy/aks/aks-e2e.jobs.yaml
  parameters:
    name: "aks_ubuntu_22_linux_e2e"
    displayName: AKS Ubuntu 22
    arch: "amd64"
    os: "linux"
    clusterType: linux-cniv1-up
    clusterName: "ubuntu22e2e"
    vmSize: Standard_B2s
    k8sVersion: 1.25
    scaleup: 100
    dependsOn: "containerize"

- template: singletenancy/aks/aks-e2e.jobs.yaml
  parameters:
    name: "aks_windows_22_e2e"
    displayName: AKS Windows 2022
    arch: amd64
    os: windows
    clusterType: windows-cniv1-up
    clusterName: "win22e2e"
    vmSize: Standard_B2ms
    os_version: "ltsc2022"
    scaleup: 50
    dependsOn: "containerize"

# CNI dual stack overlay E2E tests
- template: singletenancy/dualstack-overlay/dualstackoverlay-e2e.jobs.yaml
  parameters:
    name: "dualstackoverlay_e2e"
    displayName: AKS DualStack Overlay
    os: linux
    clusterType: dualstack-overlay-byocni-up
    clusterName: "dsovere2e"
    vmSize: Standard_B2ms
    dependsOn: "containerize"

- stage: delete
  displayName: Delete Clusters
  condition: always()
  dependsOn:
    - setup
    - azure_overlay_e2e
    - azure_overlay_stateless_e2e
    - aks_swift_e2e
    - cilium_e2e
    - cilium_nodesubnet_e2e
    - cilium_overlay_e2e
    - cilium_h_overlay_e2e
    - aks_ubuntu_22_linux_e2e
    - aks_swift_vnetscale_e2e
    - aks_windows_22_e2e
    - dualstackoverlay_e2e
    - cilium_dualstackoverlay_e2e
  variables:
    commitID: $[ stagedependencies.setup.env.outputs['EnvironmentalVariables.commitID'] ]
  jobs:
  - job: delete_build
    displayName: Delete Cluster
    strategy:
      maxParallel: 4
      matrix:
        cilium_e2e:
          name: cilium_e2e
          clusterName: "ciliume2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        cilium_nodesubnet_e2e:
          name: cilium_nodesubnet_e2e
          clusterName: "cilndsubnete2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        cilium_overlay_e2e:
          name: cilium_overlay_e2e
          clusterName: "cilovere2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        cilium_h_overlay_e2e:
          name: cilium_h_overlay_e2e
          clusterName: "cilwhleovere2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        azure_overlay_e2e:
          name: azure_overlay_e2e
          clusterName: "azovere2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        azure_overlay_stateless_e2e:
          name: azure_overlay_stateless_e2e
          clusterName: "statelesswin"
          region: $(REGION_AKS_CLUSTER_TEST)
        aks_swift_e2e:
          name: aks_swift_e2e
          clusterName: "swifte2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        aks_swift_vnetscale_e2e:
          name: aks_swift_vnetscale_e2e
          clusterName: "vscaleswifte2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        aks_ubuntu_22_linux_e2e:
          name: aks_ubuntu_22_linux_e2e
          clusterName: "ubuntu22e2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        aks_windows_22_e2e:
          name: aks_windows_22_e2e
          clusterName: "win22e2e"
          region: $(REGION_AKS_CLUSTER_TEST)
        dualstackoverlay_e2e:
          name: dualstackoverlay_e2e
          clusterName: "dsovere2e"
          region: $(REGION_DUALSTACKOVERLAY_CLUSTER_TEST)
        cilium_dualstackoverlay_e2e:
          name: cilium_dualstackoverlay_e2e
          clusterName: "cildsovere2e"
          region: $(REGION_DUALSTACKOVERLAY_CLUSTER_TEST)
    steps:
    - template: templates/delete-cluster.steps.yaml
      parameters:
        name: $(name)
        clusterName: $(clusterName)-$(commitID)
        region: $(region)
        sub: $(SUB_AZURE_NETWORK_AGENT_BUILD_VALIDATIONS)
        svcConn: $(BUILD_VALIDATIONS_SERVICE_CONNECTION)
