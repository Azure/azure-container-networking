#################################
#### WINDOWS PACKAGE MANAGER ####
#################################
# Description:
# Implementation of the package manager operations for windows systems.

parameters:
## Public Parameters

# Inherited.
- name: operationName
  type: string
# Inherited.
- name: packageName
  type: string
  default: ''
# Inherited.
- name: cmdopts
  type: string
  default: ''


## Private Parameters

# The operations supported by this module.
# You can extend this list in order to create package manager specific
# operations. Implement these operations below.
- name: extendedOperations
  type: object
  default: []


steps:
## Update
##
## The package manager update command.
## This has a different function for windows here than other linux-ish package
## managers. In this case; we clear the modules loaded in the ps env.
- ${{ if eq(parameters.operationName, 'update') }}:
  - task: PowerShell@2
    displayName: 'Clear Loaded Modules (ps)'
    inputs:
      targetType: inline
      script: |
        Remove-Module *; $error.Clear(); Clear-Host


## Upgrade
##
## The package manager upgrade command.
## If the package name is given, then the command will attempt to upgrade _only_
## the given package. 
## If no package name is given, then the command will perform a system package
## upgrade
- ${{ elseif eq(parameters.operationName, 'upgrade') }}:
  - ${{ if ne(parameters.packageName, '') }}:
    - task: PowerShell@2
      displayName: 'Upgrading Package (ps:${{ parameters.packageName }})'
      inputs:
        targetType: inline
        script: |
          Update-Package â€“reinstall $env:PKG
      env:
        PKG: '${{ parameters.packageName }}'

  - ${{ else }}:
    - task: PowerShell@2
      displayName: 'Upgrading System Packages (ps:${{ parameters.packageName }})'
      inputs:
        targetType: inline
        script: |
          Update-Module


## Install
##
## The package manager install command.
## Installs the package given by packageName parameter.
- ${{ elseif eq(parameters.operationName, 'install') }}:
  - task: PowerShell@2
    displayName: Installing VSE component
    inputs:
      targetType: inline
      script: |
        Install-Package -Name $env:PKG
    env:
      PKG: '${{ parameters.packageName }}'


## Remove
##
## The package manager install command.
## Installs the package given by packageName parameter.
- ${{ elseif eq(parameters.operationName, 'remove') }}:
  - task: PowerShell@2
    displayName: 'Removing Package (ps:${{ parameters.packageName }})'
    inputs:
      targetType: inline
      script: |
        Uninstall-Package -Name $env:PKG
    env:
      PKG: '${{ parameters.packageName }}'


##- ${{ elseif containsValue(parameters.extendedOperations, parameters.operationName) }}:
  # Add Other Operation Implementations Here.


## Operation Not Implemented Catch
- ${{ else }}:
  - bash: |
      echo >&2 "This operation is not implemented for this package manager."
    displayName: 'Operation Not Implemented (windows:${{ parameters.operationName }})'
