################################################################################
#################### Rename Dockerfile References Template #####################
################################################################################
#
# Description: 
#   OneBranch requires that dockerfiles used in their builds are named 
#   'Dockerfile'. This fascilitates the creation of this template in order to 
#   easily create new folders for each operating system required for build.
#
#   This template also has the ability to conduct simple naming replacements for
#   the updated Dockerfile name within a specified directory.
#
#   For improved clarity, all other top-level dockerfiles are removed from the 
#   target - or replacement - directory.
#
# Parameters:
#   source_path (string) - The path (absolute or relative to $working_directory) 
#     to the desired source folder. If the folder does not exist, a new one will
#     be created. Any matching files will be overwritten.
#
#   source_dockerfile (string) - The file name of the source dockerfile. 
#     Filename only.
#
#   target_path (string) - The path (absolute or relative to $working_directory) 
#     to the desired target folder. If the folder does not exist, a new one will 
#     be created. Any matching files will be overwritten.
#
#   target_dockerfile (string|default) - The new file name of the dockerfile. 
#     Filename only. Will likely never need to be used.
#
#   working_directory (string|default) - The directory to perform the 
#     operations.
#
#   replace_references (boolean|default) - If this is set to true, this module 
#     will rename references to the moved Dockerfile to the new 
#     $target_dockerfile. This is a dumb sed replace; set with care.
#
#   replace_path (string|default) - The directory for which to search for 
#     references to the old dockerfile name. Replce will default to $target_path 
#     if not provided.
#
#   topic (string|default) - Appends a provided topic string to the display 
#     name. Need not be unique. Defaults to empty string.
#
# Outputs: None
#
################################################################################
parameters:
- name: source_path
  type: string

- name: source_dockerfile
  type: string

- name: target_path
  type: string

- name: target_dockerfile
  type: string
  default: 'Dockerfile'

- name: working_directory
  type: string
  default: '$(Build.SourcesDirectory)'

- name: replace_references
  type: boolean
  default: false

- name: replace_path
  type: string
  default: ''

- name: topic
  type: string
  default: ''


steps:
- bash: |
    set -e; [[ -n $DEBUG ]] && [[ $DEBUG =~ ^[T|t]rue$ ]] && set -x

    mv "$SOURCE_REL_PATH"/"$SOURCE_DOCKERFILE" "$TARGET_REL_PATH"/"$TARGET_DOCKERFILE"
    if [[ -n $REFERENCE_REPLACE ]] && [[ $REFERENCE_REPLACE =~ ^[T|t]rue$ ]]; then
      sed -i "s|$SOURCE_DOCKERFILE|$TARGET_DOCKERFILE|g" $(grep -rl "$REPLACE_PATH")
    fi
    find "$TARGET_REL_PATH" -maxdepth 1 -type f -name '*Dockerfile' ! -wholename "$TARGET_REL_PATH"/"$TARGET_DOCKERFILE" -delete
  workingDirectory: $(ACR_DIR)
  ${{ if parameters.topic }}:
    displayName: "Move Dockerfile to OneBranch Approved Naming Format - ${{ parameters.topic }}"
  ${{ else }}:
    displayName: "Move Dockerfile to OneBranch Approved Naming Format"
  env: 
    REFERENCE_REPLACE: ${{ parameters.replace_references }}
    REPLACE_PATH: ${{ coalesce(parameters.replace_path, parameters.target_path) }}
    SOURCE_REL_PATH: ${{ parameters.source_path }}
    TARGET_REL_PATH: ${{ parameters.target_path }}
    SOURCE_DOCKERFILE: ${{ parameters.source_dockerfile }}
    TARGET_DOCKERFILE: ${{ parameters.target_dockerfile }}
