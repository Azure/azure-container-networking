apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: azure-npm
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: azure-npm
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - nodes
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
  name: azure-npm-binding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: azure-npm
subjects:
- kind: ServiceAccount
  name: azure-npm
  namespace: kube-system
---
apiVersion: v1
data:
  azure-npm.json: |
    {
        "ResyncPeriodInMinutes": 15,
        "ListeningPort":         10091,
        "ListeningAddress":      "0.0.0.0",
        "Toggles": {
            "EnablePrometheusMetrics": true,
            "EnablePprof":             true,
            "EnableHTTPDebugAPI":      true,
            "EnableV2NPM":             false,
            "PlaceAzureChainFirst":    false
        },
        "Transport": {
          "Address": "azure-npm.kube-system.svc.cluster.local",
          "Port": 10092,
          "ServicePort": 9001
        }
    }
kind: ConfigMap
metadata:
  name: azure-npm-config
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: |
    LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZzekNDQTV1Z0F3SUJBZ0lVYXU0eF
    E3QlMxeDgvWDc4UUdEMUFPbjJ4Y3dzd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2FURUxNQWtH
    QTFVRUJoTUNWVk14RXpBUkJnTlZCQWdNQ2xkaGMyaHBibWQwYjI0eEVEQU9CZ05WQkFjTQ
    pCMUpsWkcxdmJtUXhFakFRQmdOVkJBb01DVTFwWTNKdmMyOW1kREVPTUF3R0ExVUVDd3dG
    UVhwMWNtVXhEekFOCkJnTlZCQU1NQm01d2JTMWpZVEFlRncweU1qQXlNalF4T1RBeU1UVm
    FGdzB5TXpBeU1qUXhPVEF5TVRWYU1Ha3gKQ3pBSkJnTlZCQVlUQWxWVE1STXdFUVlEVlFR
    SURBcFhZWE5vYVc1bmRHOXVNUkF3RGdZRFZRUUhEQWRTWldSdApiMjVrTVJJd0VBWURWUV
    FLREFsTmFXTnliM052Wm5ReERqQU1CZ05WQkFzTUJVRjZkWEpsTVE4d0RRWURWUVFECkRB
    WnVjRzB0WTJFd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUU
    NqbDRwdVBYb1cKQ3JrRFJKRU41aVUzT28zd2MwWDM3YlNGeG1qaFRzQXoxSS9ucG93ek0x
    VUpnMEY1eCt0a1U2QVE1VjJlYnZ0ZAptTTNqZXRvaDFoWXpHZmdFRXJLemRmNkhvUytFWF
    dDbjFoRDBtUTRVdWtRNVBWZklacU9jMlZ0NlZPdFd0V1NaCkRRQW9qSkFpS20zbDNXbmQ4
    VEwxb2NyNG93Z0ErZjNmRlpVaEhkekpQMFRJanBqZ3NCb3huNUsvMUxkNTFFcGIKMGt6YT
    RnaHpQYmxxTHBkb3Z5dkJ4ZEV5amdsYTBBZG9UNExsa0IvOXR5eSszb0NVZlNSaXZQYTJK
    VGJXWVY2SAp1M1RSSkVLQXE0djJKbjFTSklCQW1jaklQamE2cXZtRnVLbThQNzYvMHNuSi
    9zNGpNY0ZwSXB6eXRTWkZvZ2xnClZhL0h0Vmc1S2JLY25RNEtRT00yeE92YnRnZkg0eDNo
    cGVtSmJ6YVVjMmR0TzZuSk16ZG1CN1FNV2thYklTSkoKUythT0kwTllqc1RVNldwY0M2Zm
    VQY0lWYXkva25XR0lXTDB3ZHhvalNQRWhnMUU1WTlxVUplYVFod1pFVG1iMApCek91cm9x
    ajdMalM0K00xbWdxRFkxdHdOWWVQbHhtSzlyRDNhVkdLS3JMWWswRVhTSTFYRDJxNDlIRT
    JPQnV6CjY3L1JURVRKUVp5aklSZjk3anU3RXBvYjNXZWUrQWtVY1NBYnlDYlVGL0VNVHhP
    aE5NTElrQ3NkTXRZKzVXakkKVTNGZm1ZeW1UV2VjWmlQMmJWalUrQ2p2QXZ4NnNmSjk5WH
    BEaG9Kdjd4RXNjWmQ0YXhzWldYSlJaVzFvc2NzVwpkcXVDa3orR3NCRXVLODl2ZTlJdmZ0
    OVpwL0VDRkxVc1FRSURBUUFCbzFNd1VUQWRCZ05WSFE0RUZnUVVlZW9ECmRSQmZEc1RTcl
    M2OUNITEQ0REo0U3hnd0h3WURWUjBqQkJnd0ZvQVVlZW9EZFJCZkRzVFNyUzY5Q0hMRDRE
    SjQKU3hnd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQW
    dFQUM1RDZpQzl6TktJSgpoUmc4clpDYkZRN0Uwd1IyZVdUQ2x6VC8rWldUeHVDM3JKdVBk
    clZSNnBXVEJIMVpiWGNhYjF6bzhGZm16MkQ1Cld3VjBoQUh6UWVUdk1la3E5VDNLVWxnL0
    Vqa2pwckUrc29MaC9iR3R3Sk1MVnBZbURNOGJ3bFBxYlhVSTZYVmoKM3R4U1NYVFQxL0Jw
    QVZDYnoyVmRIQ1ZNcXJTSiswNVRzOFlmVFV0YmordHJURWdTbk8rWDhVQWF4VXkxVUgxdQ
    ozempWbUFKa0xnMk1NRUhKUXJpc0Vxb3JVdTZxQVc3WStKN2Z2ekpNYy8wU2Zha1g1Zmln
    OTEzbzFVb3B4L1lkCnI4TFE0NHBHUTZnNXlnRU5tZy90R0d4N0hGUzhiUnU4RU9ZcWFyYn
    RQU2JpeDVxU2ZaY0d5Rlhld3Iyc0RiRFYKN1YwNHEzMWdFMmZsSDg1ZU5VcXd4dnJMVXBz
    RHNBREwxYllldWJXRkRvOThUOTNlYk5oM3F1cXBubGxPempBaQpmQmY0NjNiTnNyeEc1ZV
    NjVDBleDRTZmRaY0VpdEJsVE80bExURm1lNWJpOElsSWlmcFdISCtGZGFuZXFkUGRRCjR5
    Z25veEZKWWVISGs4MUZZNnk4Y0NDbnpxTXVwdWtSUnNvNkJDSFloYVZPVzhSalVkODFacD
    g1NUhRVHY0S1IKU1JCOWQ4cUxDNUpJN1drdGVwYnpJUldMTVZWYTQ0TnBCdU0vQk1yclpT
    SUJNQkhBdWJORDdHekFtQUlXWFZnVwpTemVHVERZK2ZKTW9sRjZtL0N0Uk0zWFlhbGVjUG
    VIcHFSb1BFOEVoVXNkVU45RWNWeEpRRHQ5VGtmbXdmajZPCnk4Vk83bDhpR0pvb2pNVER3
    cGRXbDg1TndCTmpWRVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
kind: Secret
metadata:
  name: npm-ca-certs
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: azure-npm
    component: daemon
  name: npm-daemon-metrics-cluster-service
  namespace: kube-system
spec:
  ports:
  - name: metrics
    port: 9000
    targetPort: 10091
  selector:
    component: daemon
    k8s-app: azure-npm
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
    app: azure-npm
    component: daemon
  name: azure-npm-daemon
  namespace: kube-system
spec:
  selector:
    matchLabels:
      component: daemon
      k8s-app: azure-npm
  template:
    metadata:
      annotations:
        azure.npm/scrapeable: ""
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        component: daemon
        k8s-app: azure-npm
    spec:
      containers:
      - args:
        - start
        - daemon
        command:
        - azure-npm
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: NPM_CONFIG
          value: /etc/azure-npm/azure-npm.json
        - name: DAEMON_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: DAEMON_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: azure-npm:v1.4.1
        name: azure-npm
        ports:
        - containerPort: 10091
          name: metrics
        resources:
          limits:
            cpu: 250m
            memory: 300Mi
          requests:
            cpu: 250m
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /etc/azure-npm/certs
          name: ca-certs
        - mountPath: /var/log
          name: log
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /etc/protocols
          name: protocols
        - mountPath: /etc/azure-npm
          name: azure-npm-config
      dnsPolicy: ClusterFirstWithHostNet
      hostNetwork: true
      priorityClassName: system-node-critical
      serviceAccountName: azure-npm
      tolerations:
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      volumes:
      - name: ca-certs
        secret:
          secretName: npm-ca-certs
      - hostPath:
          path: /var/log
          type: Directory
        name: log
      - hostPath:
          path: /run/xtables.lock
          type: File
        name: xtables-lock
      - hostPath:
          path: /etc/protocols
          type: File
        name: protocols
      - configMap:
          name: azure-npm-config
        name: azure-npm-config
