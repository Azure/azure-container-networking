apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: azure-cni
  namespace: kube-system
  labels:
    app: azure-cni
spec:
  selector:
    matchLabels:
      k8s-app: azure-cni
  template:
    metadata:
      labels:
        k8s-app: azure-cni
      annotations:
        cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.azure.com/cluster
                    operator: Exists
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - linux
      priorityClassName: system-node-critical
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - operator: "Exists"
          effect: NoExecute
        - operator: "Exists"
          effect: NoSchedule
      initContainers:
        - name: azure-cni
          image: mcr.microsoft.com/containernetworking/azure-cni:v1.6.30
          imagePullPolicy: Always
          command: ["/dropgz"]
          args:
            - deploy
            - azure-vnet
            - -o
            - /opt/cni/bin/azure-vnet
          volumeMounts:
            - name: cni-bin
              mountPath: /opt/cni/bin
      containers:
        - name: pause
          image: mcr.microsoft.com/oss/kubernetes/pause:3.6
      hostNetwork: true
      volumes:
        - name: cni-bin
          hostPath:
            path: /opt/cni/bin
            type: Directory
