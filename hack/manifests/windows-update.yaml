apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: azure-cni-windows
  labels:
    tier: node
    app: azure-cni
  namespace: kube-system
spec:
  selector:
    matchLabels:
      app: azure-cni
  template:
    metadata:
      labels:
        tier: node
        app: azure-cni
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                      - windows
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      securityContext:
        windowsOptions:
          hostProcess: true
          runAsUserName: "NT AUTHORITY\\system"
      hostNetwork: true
      serviceAccountName: azure-cni
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      containers:
        - name: cni-drop
          image: ${CNI_IMAGE}
          imagePullPolicy: Always
          volumeMounts:
            - name: cni-bin
              mountPath: /k/azurecni/bin/
      volumes:
        - name: cni-bin
          hostPath:
            path: /k/azurecni/bin
            type: DirectoryOrCreate
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: azure-cni
  namespace: kube-system
  labels:
    addonmanager.kubernetes.io/mode: EnsureExists
