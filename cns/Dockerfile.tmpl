# {{.RENDER_MSG}}
# SOURCE: {{.SRC}}
ARG ARCH
ARG OS_VERSION
ARG OS

# {{.GO_IMG}}
FROM --platform=linux/${ARCH} {{.GO_PIN}} AS go

# {{.MARINER_CORE_IMG}}
FROM {{.MARINER_CORE_PIN}} AS mariner-core

# {{.MARINER_DISTROLESS_IMG}}
FROM {{.MARINER_DISTROLESS_PIN}} AS mariner-distroless

# {{.WIN_HPC_IMG}}
FROM --platform=windows/${ARCH} {{.WIN_HPC_PIN}} as hpc

FROM --platform=linux/${ARCH} go AS builder
ARG OS
ARG CNS_AI_ID
ARG CNS_AI_PATH
ARG VERSION
WORKDIR /azure-container-networking
COPY . .
RUN GOOS=$OS CGO_ENABLED=0 go build -a -o /go/bin/azure-cns -ldflags "-X main.version="$VERSION" -X "$CNS_AI_PATH"="$CNS_AI_ID"" -gcflags="-dwarflocationlists=true" cns/service/*.go

FROM mariner-core AS iptables
RUN tdnf install -y iptables

FROM mariner-distroless AS linux
COPY --from=iptables /usr/sbin/*tables* /usr/sbin/
COPY --from=iptables /usr/lib /usr/lib
COPY --from=builder /go/bin/azure-cns /usr/local/bin/azure-cns
ENTRYPOINT [ "/usr/local/bin/azure-cns" ]
EXPOSE 10090

FROM hpc as windows
COPY --from=builder /azure-container-networking/cns/kubeconfigtemplate.yaml kubeconfigtemplate.yaml
COPY --from=builder /azure-container-networking/npm/examples/windows/setkubeconfigpath.ps1 setkubeconfigpath.ps1
COPY --from=builder /go/bin/azure-cns /azure-cns.exe
ENTRYPOINT ["azure-cns.exe"]
EXPOSE 10090
