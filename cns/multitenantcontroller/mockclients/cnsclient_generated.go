//go:build !ignore_uncovered
// +build !ignore_uncovered

// Code generated by MockGen. DO NOT EDIT.
// Source: cns/cnsclient/apiclient.go

// Package mockclients is a generated GoMock package.
package mockclients

import (
	reflect "reflect"

	cns "github.com/Azure/azure-container-networking/cns"
	cnstypes "github.com/Azure/azure-container-networking/cns/types"
	v1alpha "github.com/Azure/azure-container-networking/crd/nodenetworkconfig/api/v1alpha"
	gomock "github.com/golang/mock/gomock"
)

// MockCNSRestService is a mock of CNS Rest Server.
type MockCNSRestService struct {
	ctrl     *gomock.Controller
	recorder *MockCNSRestServiceMockRecorder
}

// MockAPIClientMockRecorder is the mock recorder for MockAPIClient.
type MockCNSRestServiceMockRecorder struct {
	mock *MockCNSRestService
}

// NewMockAPIClient creates a new mock instance.
func NewMockCNSRestServer(ctrl *gomock.Controller) *MockCNSRestService {
	mock := &MockCNSRestService{ctrl: ctrl}
	mock.recorder = &MockCNSRestServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCNSRestService) EXPECT() *MockCNSRestServiceMockRecorder {
	return m.recorder
}

// CreateOrUpdateNetworkContainerInternal mocks base method.
func (m *MockCNSRestService) CreateOrUpdateNetworkContainerInternal(nc *cns.CreateNetworkContainerRequest) cnstypes.ResponseCode {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrUpdateNetworkContainerInternal", nc)
	ret0, _ := ret[0].(cnstypes.ResponseCode)
	return ret0
}

// CreateOrUpdateNetworkContainerInternal indicates an expected call of CreateOrUpdateNetworkContainerInternal.
func (mr *MockCNSRestServiceMockRecorder) CreateOrUpdateNetworkContainerInternal(nc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrUpdateNetworkContainerInternal", reflect.TypeOf((*MockCNSRestService)(nil).CreateOrUpdateNetworkContainerInternal), nc)
}

// DeleteNetworkContainerInternal mocks base method.
func (m *MockCNSRestService) DeleteNetworkContainerInternal(nc cns.DeleteNetworkContainerRequest) cnstypes.ResponseCode {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNetworkContainerInternal", nc)
	ret0, _ := ret[0].(cnstypes.ResponseCode)
	return ret0
}

// DeleteNetworkContainerInternal indicates an expected call of DeleteNetworkContainerInternal.
func (mr *MockCNSRestServiceMockRecorder) DeleteNetworkContainerInternal(nc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNetworkContainerInternal", reflect.TypeOf((*MockCNSRestService)(nil).DeleteNetworkContainerInternal), nc)
}

// GetNetworkContainerInternal mocks base method.
func (m *MockCNSRestService) GetNetworkContainerInternal(nc cns.GetNetworkContainerRequest) (cns.GetNetworkContainerResponse, cnstypes.ResponseCode) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNetworkContainerInternal", nc)
	ret0, _ := ret[0].(cns.GetNetworkContainerResponse)
	ret1, _ := ret[1].(cnstypes.ResponseCode)
	return ret0, ret1
}

// GetNetworkContainerInternal indicates an expected call of GetNetworkContainerInternal.
func (mr *MockCNSRestServiceMockRecorder) GetNetworkContainerInternal(nc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNetworkContainerInternal", reflect.TypeOf((*MockCNSRestService)(nil).GetNetworkContainerInternal), nc)
}

// ReconcileNCState mocks base method.
func (m *MockCNSRestService) ReconcileNCState(nc *cns.CreateNetworkContainerRequest, pods map[string]cns.PodInfo, scalar v1alpha.Scaler, spec v1alpha.NodeNetworkConfigSpec) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReconcileNCState", nc, pods, scalar, spec)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReconcileNCState indicates an expected call of ReconcileNCState.
func (mr *MockCNSRestServiceMockRecorder) ReconcileNCState(nc, pods, scalar, spec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReconcileNCState", reflect.TypeOf((*MockCNSRestService)(nil).ReconcileNCState), nc, pods, scalar, spec)
}

// UpdateIPAMPoolMonitor mocks base method.
func (m *MockCNSRestService) UpdateIPAMPoolMonitor(scalar v1alpha.Scaler, spec v1alpha.NodeNetworkConfigSpec) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateIPAMPoolMonitor", scalar, spec)
}

// UpdateIPAMPoolMonitor indicates an expected call of UpdateIPAMPoolMonitor.
func (mr *MockCNSRestServiceMockRecorder) UpdateIPAMPoolMonitor(scalar, spec interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateIPAMPoolMonitor", reflect.TypeOf((*MockCNSRestService)(nil).UpdateIPAMPoolMonitor), scalar, spec)
}
